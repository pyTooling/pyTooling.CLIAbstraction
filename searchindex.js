Search.setIndex({"docnames": ["Arguments", "Dependency", "Doc-License", "Executable", "Glossary", "Installation", "License", "Program", "Tutorial", "coverage/index", "genindex", "index", "py-modindex", "pyTooling.CLIAbstraction/index", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.Argument", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.BooleanFlag", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.Command", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.Flag", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.KeyValueFlag", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.OptionalValuedFlag", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.ValuedFlag", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.ValuedFlagList", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.ValuedTupleFlag", "typing/index"], "filenames": ["Arguments.rst", "Dependency.rst", "Doc-License.rst", "Executable.rst", "Glossary.rst", "Installation.rst", "License.rst", "Program.rst", "Tutorial.rst", "coverage/index.rst", "genindex.rst", "index.rst", "py-modindex.rst", "pyTooling.CLIAbstraction/index.rst", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.rst", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.Argument.rst", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.BooleanFlag.rst", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.Command.rst", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.Flag.rst", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.KeyValueFlag.rst", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.OptionalValuedFlag.rst", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.ValuedFlag.rst", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.ValuedFlagList.rst", "pyTooling.CLIAbstraction/pyTooling.CLIAbstraction.ValuedTupleFlag.rst", "typing/index.rst"], "titles": ["Arguments", "Dependency", "Creative Commons Attribution 4.0 International", "Executable", "Glossary", "Installation/Updates", "Apache License 2.0", "Program", "Tutorial", "Coverage Report", "Index", "The pyTooling.CLIAbstraction Documentation", "Python Module Index", "&lt;no title&gt;", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pyTooling.CLIAbstraction</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pyTooling.CLIAbstraction.Argument</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pyTooling.CLIAbstraction.BooleanFlag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pyTooling.CLIAbstraction.Command</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pyTooling.CLIAbstraction.Flag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pyTooling.CLIAbstraction.KeyValueFlag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pyTooling.CLIAbstraction.OptionalValuedFlag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pyTooling.CLIAbstraction.ValuedFlag</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pyTooling.CLIAbstraction.ValuedFlagList</span></code>", "<code class=\"docutils literal notranslate\"><span class=\"pre\">pyTooling.CLIAbstraction.ValuedTupleFlag</span></code>", "Static Type Checking Report"], "terms": {"\u00bd": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u00bc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u215b": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u00be": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u215c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u215d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u215e": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "_": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u00b5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u03c9": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u00aa": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u00ba": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u00b9": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u00b2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u00b3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u212c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2145": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u212d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2102": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2146": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u03dd": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2130": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2147": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2131": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u02c7": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u210f": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u210b": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2111": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2148": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2110": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2124": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2112": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2133": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2115": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2134": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u210c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2119": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u210d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u211a": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u211c": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u211b": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u211d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u03f5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u03d5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u03c5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u03b5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u03f0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u03c6": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u03d6": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u03f1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u03c2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u03d1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "\u2128": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "name": [0, 3, 6, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "convent": 0, "basic": 0, "class": [0, 3, 6, 7, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "short": 0, "long": 0, "window": [0, 3, 7, 11, 14], "raw": 0, "format": [0, 2, 6, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23], "exampl": [0, 2, 6, 16, 17, 18, 19, 20, 21, 22, 23], "prog": 0, "executableargu": [0, 13, 14, 15], "file1": [0, 22, 23], "txt": [0, 1, 23], "delimiterargu": [0, 13, 14, 15], "help": 0, "commandargu": [0, 11, 13, 14, 17], "stringargu": [0, 13, 14, 15], "string1": 0, "string2": 0, "value1": 0, "value2": 0, "stringlistargu": [0, 13, 14, 15], "pathargu": [0, 11, 13, 14, 15], "path1": 0, "path2": 0, "log": [0, 22], "pathlistargu": [0, 13, 14, 15], "an": [0, 2, 3, 6, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "repres": [0, 3, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "program": [0, 3, 4, 8, 11, 13, 14], "The": [0, 1, 2, 3, 6, 7, 14, 15, 20, 21], "intern": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23], "i": [0, 2, 3, 6, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "object": [0, 6, 11, 15], "ar": [0, 1, 2, 6, 11, 14, 15, 16, 20, 21], "usual": [0, 17], "mutual": 0, "exclus": [0, 2, 6], "first": [0, 8], "thei": [0, 2, 11, 14], "us": [0, 1, 3, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "logic": 0, "group": 0, "while": [0, 6, 14], "can": [0, 2, 3, 11, 14, 15], "cannot": [0, 2, 6], "have": [0, 2, 6], "shouldn": 0, "t": [0, 6], "confus": 0, "arg1": 0, "argument2": 0, "For": [0, 2, 6], "simpl": [0, 14, 15, 18], "variou": 0, "A": [0, 2, 6, 15, 18, 21], "accept": [0, 2], "ani": [0, 1, 2, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "If": [0, 2, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23], "ha": [0, 2, 6, 11, 14], "predefin": 0, "more": [0, 2, 6, 11, 22], "specif": [0, 6, 14], "should": [0, 2, 6], "like": [0, 11, 15, 18], "support": [0, 6, 15], "commonli": 0, "singl": [0, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23], "doubl": [0, 15, 16, 17, 18, 19, 20, 21, 22, 23], "dash": [0, 16, 17, 18, 19, 20, 21, 22, 23], "slash": [0, 16, 17, 18, 20, 21, 22, 23], "plu": 0, "shortcommand": [0, 13, 14, 17], "longcommand": [0, 13, 14, 17], "windowscommand": [0, 13, 14, 17], "shortflag": [0, 13, 14, 18], "longflag": [0, 3, 7, 11, 13, 14, 18], "windowsflag": [0, 13, 14, 18], "shortbooleanflag": [0, 13, 14, 16], "longbooleanflag": [0, 13, 14, 16], "windowsbooleanflag": [0, 13, 14, 16], "shortoptionalvaluedflag": [0, 13, 14, 20], "longoptionalvaluedflag": [0, 13, 14, 20], "windowsoptionalvaluedflag": [0, 13, 14, 20], "shortvaluedflag": [0, 13, 14, 21], "longvaluedflag": [0, 13, 14, 21], "windowsvaluedflag": [0, 13, 14, 21], "shortvaluedflaglist": [0, 13, 14, 22], "longvaluedflaglist": [0, 13, 14, 22], "windowsvaluedflaglist": [0, 13, 14, 22], "shorttupleflag": [0, 11, 13, 14, 23], "longtupleflag": [0, 13, 14, 23], "windowstupleflag": [0, 13, 14, 23], "gkey1": 0, "gkey2": 0, "g": [0, 1, 7, 15], "key1": 0, "key2": 0, "shortkeyvalueflag": [0, 13, 14, 19], "longkeyvalueflag": [0, 13, 14, 19], "windowskeyvalueflag": [0, 13, 14, 19], "write": [0, 6], "document": [0, 2, 6], "line": [0, 3, 7, 11, 14, 15], "either": [0, 6], "present": [0, 18], "said": 0, "activ": [0, 7], "true": [0, 3, 7, 11, 14, 16, 19], "3": [0, 1], "variant": [0, 11], "librari": 1, "io": 1, "requir": [1, 2, 6], "version": [1, 3, 6, 7], "licens": 1, "5": 1, "0": [1, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23], "apach": [1, 11], "2": [1, 11, 19], "none": [1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "pyattribut": [1, 14], "1": [1, 19, 20, 21, 22], "argcomplet": 1, "addit": [1, 2, 3, 18], "python": [1, 7, 11], "need": [1, 2, 8], "code": [1, 6, 11], "collect": [1, 2, 14], "static": [1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "These": 1, "develop": 1, "thu": 1, "sub": [1, 11, 17], "evalu": 1, "further": 1, "manual": 1, "instal": 1, "file": [1, 6, 11, 22, 23], "all": [1, 2, 6, 11, 14, 15, 16, 17, 18, 20, 21, 22], "via": [1, 15], "pip3": [1, 5], "recurs": 1, "mandatori": 1, "too": 1, "u": [1, 5], "r": 1, "list": [1, 6, 7, 8, 11, 14, 15, 22], "pytest": [1, 9], "7": 1, "mit": 1, "Not": [1, 6], "yet": 1, "cov": 1, "4": [1, 11], "mypi": [1, 24], "lxml": 1, "9": [1, 2], "bsd": 1, "claus": 1, "gener": [1, 3, 6, 9, 11, 14, 15, 16, 19, 20, 21, 22, 23, 24], "doc": [1, 11], "sphinx_btd_them": 1, "sphinx_fontawesom": 1, "6": 1, "gpl": 1, "sphinx_autodoc_typehint": 1, "19": 1, "build": 1, "wheel": 1, "38": 1, "e": [1, 7, 15], "pypi": 1, "equival": [1, 2], "servic": [1, 2, 6], "maintain": [1, 11], "dist": 1, "twine": 1, "thi": [2, 6, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "local": [2, 6], "copi": [2, 6, 7], "cc": [2, 11], "BY": [2, 11], "appli": [2, 6], "onli": [2, 6], "project": [2, 6], "corpor": 2, "law": [2, 6], "firm": 2, "doe": [2, 6], "provid": [2, 3, 6], "legal": [2, 6], "advic": 2, "distribut": [2, 6], "creat": [2, 11], "lawyer": 2, "client": 2, "relationship": 2, "make": [2, 6, 14], "its": [2, 3, 6, 7, 11, 14], "relat": 2, "inform": [2, 3, 6, 7], "avail": [2, 6, 15], "basi": [2, 6], "give": [2, 6], "regard": [2, 6], "materi": 2, "under": [2, 6, 11], "damag": [2, 6], "result": [2, 6, 14], "from": [2, 3, 6, 7, 8, 14, 16], "fullest": 2, "extent": 2, "possibl": [2, 6, 14], "standard": 2, "set": [2, 11, 14, 16], "creator": 2, "holder": 2, "mai": [2, 6], "share": [2, 6], "origin": [2, 6], "work": [2, 6], "authorship": [2, 6], "subject": [2, 6], "copyright": 2, "certain": 2, "specifi": [2, 11, 15], "below": [2, 6], "follow": [2, 3, 6, 7, 11, 17, 20, 21], "consider": 2, "purpos": [2, 6], "exhaust": 2, "do": [2, 6], "form": [2, 6], "part": [2, 6], "our": 2, "licensor": [2, 6], "intend": 2, "those": [2, 6], "author": [2, 6], "permiss": [2, 6], "wai": 2, "otherwis": [2, 6], "restrict": 2, "irrevoc": [2, 6], "read": [2, 11], "understand": 2, "choos": [2, 6, 8], "befor": 2, "also": [2, 6], "secur": 2, "necessari": 2, "so": [2, 3, 11, 14], "reus": 2, "expect": [2, 16], "clearli": 2, "mark": [2, 6, 14], "includ": [2, 6], "except": [2, 6, 14], "By": [2, 15], "one": [2, 6, 15, 20, 21], "grant": 2, "": [2, 6, 14], "reason": [2, 6], "becaus": 2, "applic": [2, 6], "regul": 2, "still": 2, "special": [2, 6], "request": 2, "ask": 2, "chang": [2, 6, 7], "describ": [2, 6], "although": 2, "you": [2, 6], "encourag": 2, "respect": 2, "where": [2, 6, 14], "exercis": [2, 6], "defin": [2, 3, 6, 8, 11], "agre": [2, 6], "bound": [2, 14], "To": [2, 6], "contract": [2, 6], "your": [2, 6], "benefit": 2, "receiv": [2, 6], "adapt": 2, "mean": [2, 6], "similar": 2, "deriv": [2, 3, 6, 8, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "base": [2, 3, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "upon": 2, "which": [2, 3, 6, 14, 16, 17, 18, 20, 21, 22], "translat": [2, 6, 22], "alter": 2, "arrang": 2, "transform": [2, 6], "modifi": [2, 3, 6], "manner": 2, "held": 2, "music": 2, "perform": [2, 6], "sound": 2, "record": 2, "alwai": 2, "produc": 2, "synch": 2, "time": 2, "move": 2, "imag": 2, "contribut": 2, "accord": 2, "close": 2, "without": [2, 6, 16], "broadcast": 2, "how": [2, 5, 6, 8, 15], "label": 2, "categor": 2, "b": 2, "effect": 2, "technolog": 2, "measur": 2, "absenc": 2, "proper": [2, 7, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23], "circumv": 2, "fulfil": 2, "oblig": [2, 6], "articl": 2, "11": 2, "wipo": 2, "treati": 2, "adopt": 2, "decemb": 2, "20": [2, 11], "1996": 2, "agreement": [2, 6], "fair": 2, "deal": 2, "artist": 2, "literari": 2, "individu": [2, 6], "entiti": [2, 6, 14], "process": 2, "reproduct": [2, 6], "displai": [2, 6], "dissemin": 2, "commun": [2, 6], "import": [2, 6], "member": [2, 11], "access": [2, 11, 14], "place": [2, 6], "chosen": 2, "them": 2, "than": 2, "direct": [2, 6], "96": 2, "ec": 2, "european": 2, "parliament": 2, "council": 2, "march": 2, "protect": 2, "amend": 2, "succeed": 2, "well": 2, "essenti": 2, "anywher": 2, "world": 2, "correspond": 2, "herebi": [2, 6], "worldwid": [2, 6], "royalti": [2, 6], "free": [2, 6], "non": [2, 6], "sublicens": [2, 6], "reproduc": [2, 6], "whole": [2, 6], "avoid": 2, "doubt": 2, "compli": [2, 6], "media": [2, 6], "technic": 2, "modif": [2, 6], "allow": 2, "whether": [2, 6], "now": 2, "known": 2, "hereaft": 2, "waiv": 2, "assert": [2, 6], "forbid": 2, "simpli": 2, "never": 2, "downstream": 2, "recipi": [2, 6], "offer": [2, 3, 6, 7, 11], "everi": 2, "automat": 2, "No": 2, "impos": 2, "differ": [2, 6, 16], "endors": 2, "noth": [2, 6], "constitut": [2, 6], "constru": [2, 6], "impli": [2, 6], "connect": 2, "sponsor": 2, "offici": 2, "statu": 2, "design": [2, 6, 11], "moral": 2, "integr": 2, "nor": 2, "privaci": 2, "person": 2, "howev": [2, 6], "patent": 2, "trademark": 2, "directli": 2, "through": [2, 6], "societi": 2, "voluntari": 2, "waivabl": 2, "statutori": 2, "compulsori": 2, "scheme": 2, "In": [2, 3, 6], "case": 2, "expressli": 2, "reserv": 2, "made": [2, 6], "must": [2, 6, 14, 15], "retain": [2, 6], "suppli": 2, "identif": [2, 6], "pseudonym": 2, "notic": [2, 6], "refer": [2, 15], "uri": 2, "hyperlink": 2, "practic": 2, "indic": [2, 6], "previou": 2, "text": [2, 6, 14], "satisfi": 2, "medium": [2, 6], "context": [2, 14], "resourc": 2, "remov": 2, "prevent": 2, "extract": 2, "substanti": 2, "portion": [2, 3, 7, 11], "content": [2, 6], "supplement": 2, "replac": [2, 6], "unless": [2, 6], "separ": [2, 6, 15, 17, 22, 23], "undertaken": 2, "represent": [2, 15, 16, 17, 18, 19, 20, 21, 22, 23], "kind": [2, 6], "concern": 2, "express": [2, 6], "titl": [2, 6], "merchant": [2, 6], "fit": [2, 6], "particular": [2, 6], "infring": [2, 6], "latent": 2, "defect": 2, "accuraci": 2, "presenc": 2, "error": 2, "discover": 2, "full": 2, "event": [2, 6], "liabl": [2, 6], "theori": [2, 6], "neglig": [2, 6], "indirect": [2, 6], "incident": [2, 6], "consequenti": [2, 6], "punit": 2, "exemplari": 2, "loss": [2, 6], "cost": 2, "expens": 2, "aris": [2, 6], "out": [2, 6], "even": [2, 6, 20, 21], "been": [2, 6, 11], "advis": [2, 6], "abov": [2, 5, 6], "shall": [2, 6, 14], "most": 2, "approxim": 2, "absolut": 2, "waiver": 2, "here": 2, "fail": 2, "reinstat": 2, "date": [2, 6], "violat": 2, "cure": 2, "within": [2, 6, 14], "30": 2, "dai": 2, "discoveri": 2, "affect": 2, "seek": 2, "remedi": 2, "stop": 2, "surviv": 2, "state": [2, 6, 16], "herein": [2, 6], "independ": 2, "reduc": 2, "could": 2, "lawfulli": 2, "provis": 2, "deem": 2, "unenforc": 2, "reform": 2, "minimum": 2, "enforc": 2, "sever": 2, "remain": [2, 6], "failur": [2, 6], "consent": 2, "privileg": 2, "immun": 2, "jurisdict": 2, "parti": [2, 6], "notwithstand": [2, 6], "elect": 2, "publish": 2, "instanc": [2, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "consid": 2, "permit": 2, "polici": 2, "creativecommon": 2, "org": [2, 6], "logo": 2, "prior": 2, "written": [2, 6, 8], "unauthor": 2, "paragraph": 2, "contact": 2, "command": [3, 7, 11, 13, 14, 15], "api": 3, "subprocess": [3, 7, 11, 14, 15], "popen": [3, 11, 14, 15], "abstract": [3, 7, 11, 14, 15, 16], "launch": [3, 11, 14], "featur": [3, 7], "cli": [3, 11, 14, 17], "subproess": 3, "setup": 3, "environ": 3, "stdout": 3, "reader": 3, "implement": [3, 7, 11, 14, 15], "git": [3, 7, 11, 17], "argument": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23], "definit": [3, 7, 11], "_executablenam": [3, 7, 11, 13, 14], "darwin": [3, 7, 11], "linux": [3, 7, 11, 14], "ex": [3, 7, 11, 17], "cliargument": [3, 7, 11, 13, 14], "flagvers": [3, 7], "print": [3, 6, 7, 11], "usag": [3, 7, 11, 14], "startprocess": [3, 11], "getlineread": [3, 11], "tbc": 4, "execut": [4, 6, 7, 8, 11, 13, 14, 15, 20, 21], "clioption": [4, 14], "cliparamet": 4, "pytool": [5, 13], "cliabstract": [5, 13], "see": [5, 6, 7, 22], "section": [5, 6], "sourc": [6, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "configur": [6, 11], "januari": 6, "2004": 6, "term": 6, "AND": 6, "condit": 6, "FOR": 6, "owner": 6, "union": [6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "act": 6, "other": 6, "control": 6, "common": [6, 11], "power": 6, "caus": [6, 14], "manag": 6, "ii": 6, "ownership": 6, "fifti": 6, "percent": 6, "50": 6, "outstand": 6, "iii": 6, "benefici": 6, "prefer": 6, "softwar": 6, "mechan": 6, "compil": 6, "convers": 6, "type": [6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "attach": [6, 14], "appendix": 6, "editori": 6, "revis": 6, "annot": [6, 14], "elabor": 6, "mere": 6, "link": 6, "bind": 6, "interfac": [6, 7, 11, 14], "thereof": 6, "intention": 6, "submit": 6, "inclus": 6, "behalf": 6, "electron": [6, 11], "verbal": 6, "sent": 6, "mail": 6, "system": [6, 7], "issu": 6, "track": 6, "discuss": 6, "improv": [6, 11], "exclud": 6, "conspicu": 6, "contributor": 6, "whom": 6, "subsequ": 6, "incorpor": 6, "each": [6, 14, 15, 22, 23], "perpetu": 6, "charg": 6, "prepar": 6, "publicli": 6, "sell": 6, "transfer": 6, "claim": 6, "necessarili": 6, "alon": 6, "combin": 6, "wa": [6, 11, 14], "institut": 6, "litig": 6, "against": 6, "cross": 6, "counterclaim": 6, "lawsuit": 6, "alleg": 6, "contributori": 6, "termin": 6, "meet": 6, "carri": 6, "promin": 6, "attribut": [6, 11, 14], "pertain": 6, "readabl": 6, "contain": [6, 15], "least": [6, 15], "along": 6, "wherev": 6, "third": 6, "normal": 6, "appear": 6, "add": [6, 14], "own": [6, 14], "alongsid": 6, "addendum": 6, "statement": 6, "explicitli": 6, "supersed": 6, "trade": 6, "product": 6, "customari": 6, "AS": 6, "OR": 6, "OF": 6, "sole": 6, "respons": 6, "determin": 6, "appropri": 6, "assum": 6, "risk": 6, "associ": 6, "tort": 6, "deliber": 6, "grossli": 6, "charact": [6, 20, 21], "inabl": 6, "goodwil": 6, "stoppag": 6, "comput": 6, "malfunct": 6, "commerci": 6, "fee": 6, "indemn": 6, "right": 6, "consist": 6, "indemnifi": 6, "defend": 6, "hold": 6, "harmless": 6, "incur": 6, "boilerpl": 6, "field": [6, 14], "enclos": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23], "bracket": 6, "identifi": 6, "don": 6, "comment": 6, "syntax": [6, 7], "we": 6, "recommend": 6, "descript": 6, "same": 6, "page": [6, 11], "easier": 6, "archiv": 6, "yyyi": 6, "complianc": 6, "obtain": 6, "http": 6, "www": 6, "languag": 6, "govern": 6, "It": [7, 17], "enabl": [7, 11, 16], "nest": [7, 8, 14], "pre": [7, 11], "construct": 7, "correct": 7, "order": 7, "escap": [7, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23], "readi": 7, "asargu": [7, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "oper": 7, "decor": [7, 14], "parametr": 7, "dictionari": [7, 14], "kei": [7, 14, 15], "valu": [7, 8, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23], "runtim": 7, "explain": 7, "helper": [7, 14], "method": [7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "select": [8, 17], "v": [8, 18], "exist": [8, 11], "tupl": [8, 14, 15, 23], "placehold": [9, 24], "layer": 11, "wrapper": 11, "easili": 11, "paramet": [11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "42": 11, "k": 11, "option": [11, 14, 15, 17, 18, 19, 20], "flag": [11, 13, 14, 15, 16, 20, 21, 22], "assembl": 11, "handov": 11, "quot": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23], "hide": 11, "complex": 11, "get": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23], "output": 11, "postprocess": 11, "wrap": [11, 15], "eda": 11, "tool": [11, 17], "autom": 11, "commit": 11, "flagverbos": 11, "verbos": [11, 18], "messag": [11, 14], "commandcommit": 11, "stage": 11, "valuecommitmessag": 11, "m": 11, "def": 11, "getcommittool": 11, "self": [11, 14], "__class__": 11, "executablepath": [11, 14], "_executablepath": [11, 13, 14], "_copyparamet": 11, "return": [11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "bump": 11, "depend": 11, "pars": 11, "pyedaa": 11, "clitool": 11, "rework": 11, "ad": 11, "miss": 11, "unit": 11, "test": 11, "coverag": 11, "string": [11, 15, 16, 17, 18, 19, 20, 21, 22, 23], "extend": 11, "patrick": 11, "lehmann": 11, "unai": 11, "martinez": 11, "corral": 11, "packag": 11, "accompani": 11, "creativ": 11, "08": 11, "jul": 11, "2023": 11, "55": 11, "commandlineargu": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "__init_subclass__": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "__new__": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "__str__": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "__repr__": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "__init__": [13, 14, 15, 16, 19, 20, 21, 22, 23], "namedargu": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "valuedargu": [13, 14, 15, 16, 19, 20, 21, 22, 23], "valuet": [13, 14, 15, 16, 21, 22, 23], "booleanflag": [13, 14, 15], "flagargu": [13, 14, 18], "keyvalueflag": [13, 14], "optionalvaluedflag": [13, 14, 15], "valuedflag": [13, 14, 15, 22], "valuedflaglist": [13, 14], "valuedtupleflag": [13, 14], "getattribut": [13, 14], "getclass": [13, 14], "_appendattribut": [13, 14], "__attributesmembername__": [13, 14], "__call__": [13, 14], "_class": [13, 14], "__clioptions__": [13, 14], "_platform": [13, 14], "_dryrun": [13, 14], "__cliparameters__": [13, 14], "__getitem__": [13, 14], "cliabstractionexcept": [13, 14], "__cause__": [13, 14], "__context__": [13, 14], "__delattr__": [13, 14], "__getattribute__": [13, 14], "__reduce__": [13, 14], "__setattr__": [13, 14], "with_traceback": [13, 14], "dryrunexcept": [13, 14], "submodul": 14, "script": 14, "inherit": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "classmethod": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "includesubclass": 14, "given": 14, "callabl": 14, "bool": [14, 16], "scope": 14, "filter": 14, "item": 14, "stream": 14, "when": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "subclass": [14, 15, 16], "function": 14, "str": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "__pyattr__": 14, "store": [14, 15], "typevar": [14, 15], "kwarg": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "ensur": 14, "regist": 14, "binarydirectorypath": 14, "dryrun": 14, "fals": [14, 16], "path": [14, 15], "classvar": 14, "dict": [14, 19], "platform": 14, "int": 14, "arg": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "whenev": 14, "declar": 14, "current": 14, "run": 14, "dry": 14, "mode": 14, "binari": 14, "alreadi": 14, "repr": 14, "workingdirectori": 14, "custom": 14, "rais": [14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "exceptionbas": 14, "delattr": 14, "getattr": 14, "initi": [14, 15, 16], "pickl": 14, "setattr": 14, "tb": 14, "__traceback__": 14, "delimit": [15, 20, 21], "symbol": 15, "convert": [15, 16, 17, 18, 19, 20, 21, 22, 23], "sequenc": [15, 22, 23], "usabl": 15, "pattern": [15, 16, 17, 18, 19, 20, 21, 22, 23], "There": 15, "multipl": 15, "vlau": 15, "pair": 15, "namedkeyvaluepair": 15, "call": [15, 16, 17, 18, 19, 20, 21, 22, 23], "posit": [15, 16, 17, 18, 19, 20, 21, 22, 23], "keyword": [15, 16, 17, 18, 19, 20, 21, 22, 23], "cl": [15, 16, 17, 18, 19, 20, 21, 22, 23], "match": [15, 16, 17, 18, 19, 20, 21, 22, 23], "iter": [15, 16, 17, 18, 19, 20, 21, 22, 23], "notimplementederror": 15, "overwritten": 15, "rtype": 15, "default": [15, 20, 21], "ident": 15, "typeerror": 15, "properti": [15, 16, 17, 18, 19, 20, 21, 22, 23], "valueerror": [15, 16, 17, 18, 19, 20, 21, 22, 23], "element": [15, 22], "space": [15, 22, 23], "comma": [15, 22, 23], "filesystem": 15, "o": 15, "variabl": 15, "disabl": 16, "neg": 16, "falsepattern": 16, "check": 16, "parser": 17, "hand": 17, "over": 17, "checkout": 17, "absent": 18, "off": 18, "data": [18, 20], "optim": [18, 20, 21], "namedkeyvalueflagargu": 19, "front": [19, 23], "switch": [19, 23], "keyvaluepair": 19, "ddebug": 19, "namedkeyvaluepairsargu": 19, "namedandvaluedargu": [19, 20, 21, 22], "sign": [20, 21], "equal": [20, 21], "pass": [20, 21], "whitespac": [20, 21], "width": [20, 21], "100": [20, 21], "patternwithvalu": 20, "valuedflagargu": [21, 22], "detail": 22, "file2": 22, "valuedtupleargu": 23, "namedtupledargu": 23}, "objects": {"pyTooling": [[14, 0, 0, "-", "CLIAbstraction"]], "pyTooling.CLIAbstraction": [[15, 0, 0, "-", "Argument"], [16, 0, 0, "-", "BooleanFlag"], [14, 5, 1, "", "CLIAbstractionException"], [14, 1, 1, "", "CLIArgument"], [17, 0, 0, "-", "Command"], [14, 5, 1, "", "DryRunException"], [14, 1, 1, "", "Executable"], [18, 0, 0, "-", "Flag"], [19, 0, 0, "-", "KeyValueFlag"], [20, 0, 0, "-", "OptionalValuedFlag"], [14, 1, 1, "", "Program"], [21, 0, 0, "-", "ValuedFlag"], [22, 0, 0, "-", "ValuedFlagList"], [23, 0, 0, "-", "ValuedTupleFlag"]], "pyTooling.CLIAbstraction.Argument": [[15, 1, 1, "", "CommandLineArgument"], [15, 1, 1, "", "DelimiterArgument"], [15, 1, 1, "", "ExecutableArgument"], [15, 1, 1, "", "NamedArgument"], [15, 1, 1, "", "PathArgument"], [15, 1, 1, "", "PathListArgument"], [15, 1, 1, "", "StringArgument"], [15, 1, 1, "", "StringListArgument"], [15, 4, 1, "", "ValueT"], [15, 1, 1, "", "ValuedArgument"]], "pyTooling.CLIAbstraction.Argument.CommandLineArgument": [[15, 2, 1, "", "AsArgument"], [15, 2, 1, "", "__init_subclass__"], [15, 2, 1, "", "__new__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Argument.DelimiterArgument": [[15, 2, 1, "", "AsArgument"], [15, 2, 1, "", "__init_subclass__"], [15, 2, 1, "", "__new__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Argument.ExecutableArgument": [[15, 2, 1, "", "AsArgument"], [15, 3, 1, "", "Executable"], [15, 2, 1, "", "__init__"], [15, 2, 1, "", "__init_subclass__"], [15, 2, 1, "", "__new__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Argument.NamedArgument": [[15, 2, 1, "", "AsArgument"], [15, 3, 1, "", "Name"], [15, 2, 1, "", "__init_subclass__"], [15, 2, 1, "", "__new__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Argument.PathArgument": [[15, 2, 1, "", "AsArgument"], [15, 3, 1, "", "Value"], [15, 2, 1, "", "__init__"], [15, 2, 1, "", "__init_subclass__"], [15, 2, 1, "", "__new__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Argument.PathListArgument": [[15, 2, 1, "", "AsArgument"], [15, 3, 1, "", "Value"], [15, 2, 1, "", "__init__"], [15, 2, 1, "", "__init_subclass__"], [15, 2, 1, "", "__new__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Argument.StringArgument": [[15, 2, 1, "", "AsArgument"], [15, 3, 1, "", "Value"], [15, 2, 1, "", "__init__"], [15, 2, 1, "", "__init_subclass__"], [15, 2, 1, "", "__new__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Argument.StringListArgument": [[15, 2, 1, "", "AsArgument"], [15, 3, 1, "", "Value"], [15, 2, 1, "", "__init__"], [15, 2, 1, "", "__init_subclass__"], [15, 2, 1, "", "__new__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Argument.ValuedArgument": [[15, 2, 1, "", "AsArgument"], [15, 3, 1, "", "Value"], [15, 2, 1, "", "__init__"], [15, 2, 1, "", "__init_subclass__"], [15, 2, 1, "", "__new__"], [15, 2, 1, "", "__repr__"], [15, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.BooleanFlag": [[16, 1, 1, "", "BooleanFlag"], [16, 1, 1, "", "LongBooleanFlag"], [16, 1, 1, "", "ShortBooleanFlag"], [16, 1, 1, "", "WindowsBooleanFlag"]], "pyTooling.CLIAbstraction.BooleanFlag.BooleanFlag": [[16, 2, 1, "", "AsArgument"], [16, 3, 1, "", "Name"], [16, 3, 1, "", "Value"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "__init_subclass__"], [16, 2, 1, "", "__new__"], [16, 2, 1, "", "__repr__"], [16, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.BooleanFlag.LongBooleanFlag": [[16, 2, 1, "", "AsArgument"], [16, 3, 1, "", "Name"], [16, 3, 1, "", "Value"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "__init_subclass__"], [16, 2, 1, "", "__new__"], [16, 2, 1, "", "__repr__"], [16, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.BooleanFlag.ShortBooleanFlag": [[16, 2, 1, "", "AsArgument"], [16, 3, 1, "", "Name"], [16, 3, 1, "", "Value"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "__init_subclass__"], [16, 2, 1, "", "__new__"], [16, 2, 1, "", "__repr__"], [16, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.BooleanFlag.WindowsBooleanFlag": [[16, 2, 1, "", "AsArgument"], [16, 3, 1, "", "Name"], [16, 3, 1, "", "Value"], [16, 2, 1, "", "__init__"], [16, 2, 1, "", "__init_subclass__"], [16, 2, 1, "", "__new__"], [16, 2, 1, "", "__repr__"], [16, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.CLIAbstractionException": [[14, 6, 1, "", "__cause__"], [14, 6, 1, "", "__context__"], [14, 2, 1, "", "__delattr__"], [14, 2, 1, "", "__getattribute__"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__new__"], [14, 2, 1, "", "__reduce__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "__setattr__"], [14, 2, 1, "", "__str__"], [14, 2, 1, "", "with_traceback"]], "pyTooling.CLIAbstraction.CLIArgument": [[14, 2, 1, "", "GetAttributes"], [14, 2, 1, "", "GetClasses"], [14, 2, 1, "", "_AppendAttribute"], [14, 6, 1, "", "__AttributesMemberName__"], [14, 2, 1, "", "__call__"], [14, 2, 1, "", "__init_subclass__"], [14, 6, 1, "", "_classes"]], "pyTooling.CLIAbstraction.Command": [[17, 1, 1, "", "CommandArgument"], [17, 1, 1, "", "LongCommand"], [17, 1, 1, "", "ShortCommand"], [17, 1, 1, "", "WindowsCommand"]], "pyTooling.CLIAbstraction.Command.CommandArgument": [[17, 2, 1, "", "AsArgument"], [17, 3, 1, "", "Name"], [17, 2, 1, "", "__init_subclass__"], [17, 2, 1, "", "__new__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Command.LongCommand": [[17, 2, 1, "", "AsArgument"], [17, 3, 1, "", "Name"], [17, 2, 1, "", "__init_subclass__"], [17, 2, 1, "", "__new__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Command.ShortCommand": [[17, 2, 1, "", "AsArgument"], [17, 3, 1, "", "Name"], [17, 2, 1, "", "__init_subclass__"], [17, 2, 1, "", "__new__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Command.WindowsCommand": [[17, 2, 1, "", "AsArgument"], [17, 3, 1, "", "Name"], [17, 2, 1, "", "__init_subclass__"], [17, 2, 1, "", "__new__"], [17, 2, 1, "", "__repr__"], [17, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.DryRunException": [[14, 6, 1, "", "__cause__"], [14, 6, 1, "", "__context__"], [14, 2, 1, "", "__delattr__"], [14, 2, 1, "", "__getattribute__"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__new__"], [14, 2, 1, "", "__reduce__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "__setattr__"], [14, 2, 1, "", "__str__"], [14, 2, 1, "", "with_traceback"]], "pyTooling.CLIAbstraction.Executable": [[14, 6, 1, "", "__cliOptions__"], [14, 6, 1, "", "__cliParameters__"], [14, 2, 1, "", "__getitem__"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__init_subclass__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "__str__"], [14, 6, 1, "", "_dryRun"], [14, 6, 1, "", "_executableNames"], [14, 6, 1, "", "_executablePath"], [14, 6, 1, "", "_platform"]], "pyTooling.CLIAbstraction.Flag": [[18, 1, 1, "", "FlagArgument"], [18, 1, 1, "", "LongFlag"], [18, 1, 1, "", "ShortFlag"], [18, 1, 1, "", "WindowsFlag"]], "pyTooling.CLIAbstraction.Flag.FlagArgument": [[18, 2, 1, "", "AsArgument"], [18, 3, 1, "", "Name"], [18, 2, 1, "", "__init_subclass__"], [18, 2, 1, "", "__new__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Flag.LongFlag": [[18, 2, 1, "", "AsArgument"], [18, 3, 1, "", "Name"], [18, 2, 1, "", "__init_subclass__"], [18, 2, 1, "", "__new__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Flag.ShortFlag": [[18, 2, 1, "", "AsArgument"], [18, 3, 1, "", "Name"], [18, 2, 1, "", "__init_subclass__"], [18, 2, 1, "", "__new__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Flag.WindowsFlag": [[18, 2, 1, "", "AsArgument"], [18, 3, 1, "", "Name"], [18, 2, 1, "", "__init_subclass__"], [18, 2, 1, "", "__new__"], [18, 2, 1, "", "__repr__"], [18, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.KeyValueFlag": [[19, 1, 1, "", "LongKeyValueFlag"], [19, 1, 1, "", "ShortKeyValueFlag"], [19, 1, 1, "", "WindowsKeyValueFlag"]], "pyTooling.CLIAbstraction.KeyValueFlag.LongKeyValueFlag": [[19, 2, 1, "", "AsArgument"], [19, 3, 1, "", "Name"], [19, 3, 1, "", "Value"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "__init_subclass__"], [19, 2, 1, "", "__new__"], [19, 2, 1, "", "__repr__"], [19, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.KeyValueFlag.ShortKeyValueFlag": [[19, 2, 1, "", "AsArgument"], [19, 3, 1, "", "Name"], [19, 3, 1, "", "Value"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "__init_subclass__"], [19, 2, 1, "", "__new__"], [19, 2, 1, "", "__repr__"], [19, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.KeyValueFlag.WindowsKeyValueFlag": [[19, 2, 1, "", "AsArgument"], [19, 3, 1, "", "Name"], [19, 3, 1, "", "Value"], [19, 2, 1, "", "__init__"], [19, 2, 1, "", "__init_subclass__"], [19, 2, 1, "", "__new__"], [19, 2, 1, "", "__repr__"], [19, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.OptionalValuedFlag": [[20, 1, 1, "", "LongOptionalValuedFlag"], [20, 1, 1, "", "OptionalValuedFlag"], [20, 1, 1, "", "ShortOptionalValuedFlag"], [20, 1, 1, "", "WindowsOptionalValuedFlag"]], "pyTooling.CLIAbstraction.OptionalValuedFlag.LongOptionalValuedFlag": [[20, 2, 1, "", "AsArgument"], [20, 3, 1, "", "Name"], [20, 3, 1, "", "Value"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "__init_subclass__"], [20, 2, 1, "", "__new__"], [20, 2, 1, "", "__repr__"], [20, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.OptionalValuedFlag.OptionalValuedFlag": [[20, 2, 1, "", "AsArgument"], [20, 3, 1, "", "Name"], [20, 3, 1, "", "Value"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "__init_subclass__"], [20, 2, 1, "", "__new__"], [20, 2, 1, "", "__repr__"], [20, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.OptionalValuedFlag.ShortOptionalValuedFlag": [[20, 2, 1, "", "AsArgument"], [20, 3, 1, "", "Name"], [20, 3, 1, "", "Value"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "__init_subclass__"], [20, 2, 1, "", "__new__"], [20, 2, 1, "", "__repr__"], [20, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.OptionalValuedFlag.WindowsOptionalValuedFlag": [[20, 2, 1, "", "AsArgument"], [20, 3, 1, "", "Name"], [20, 3, 1, "", "Value"], [20, 2, 1, "", "__init__"], [20, 2, 1, "", "__init_subclass__"], [20, 2, 1, "", "__new__"], [20, 2, 1, "", "__repr__"], [20, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.Program": [[14, 6, 1, "", "__cliOptions__"], [14, 6, 1, "", "__cliParameters__"], [14, 2, 1, "", "__getitem__"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "__init_subclass__"], [14, 2, 1, "", "__repr__"], [14, 2, 1, "", "__str__"], [14, 6, 1, "", "_dryRun"], [14, 6, 1, "", "_executableNames"], [14, 6, 1, "", "_executablePath"], [14, 6, 1, "", "_platform"]], "pyTooling.CLIAbstraction.ValuedFlag": [[21, 1, 1, "", "LongValuedFlag"], [21, 1, 1, "", "ShortValuedFlag"], [21, 1, 1, "", "ValuedFlag"], [21, 1, 1, "", "WindowsValuedFlag"]], "pyTooling.CLIAbstraction.ValuedFlag.LongValuedFlag": [[21, 2, 1, "", "AsArgument"], [21, 3, 1, "", "Name"], [21, 3, 1, "", "Value"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "__init_subclass__"], [21, 2, 1, "", "__new__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.ValuedFlag.ShortValuedFlag": [[21, 2, 1, "", "AsArgument"], [21, 3, 1, "", "Name"], [21, 3, 1, "", "Value"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "__init_subclass__"], [21, 2, 1, "", "__new__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.ValuedFlag.ValuedFlag": [[21, 2, 1, "", "AsArgument"], [21, 3, 1, "", "Name"], [21, 3, 1, "", "Value"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "__init_subclass__"], [21, 2, 1, "", "__new__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.ValuedFlag.WindowsValuedFlag": [[21, 2, 1, "", "AsArgument"], [21, 3, 1, "", "Name"], [21, 3, 1, "", "Value"], [21, 2, 1, "", "__init__"], [21, 2, 1, "", "__init_subclass__"], [21, 2, 1, "", "__new__"], [21, 2, 1, "", "__repr__"], [21, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.ValuedFlagList": [[22, 1, 1, "", "LongValuedFlagList"], [22, 1, 1, "", "ShortValuedFlagList"], [22, 1, 1, "", "ValuedFlagList"], [22, 1, 1, "", "WindowsValuedFlagList"]], "pyTooling.CLIAbstraction.ValuedFlagList.LongValuedFlagList": [[22, 2, 1, "", "AsArgument"], [22, 3, 1, "", "Name"], [22, 3, 1, "", "Value"], [22, 2, 1, "", "__init__"], [22, 2, 1, "", "__init_subclass__"], [22, 2, 1, "", "__new__"], [22, 2, 1, "", "__repr__"], [22, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.ValuedFlagList.ShortValuedFlagList": [[22, 2, 1, "", "AsArgument"], [22, 3, 1, "", "Name"], [22, 3, 1, "", "Value"], [22, 2, 1, "", "__init__"], [22, 2, 1, "", "__init_subclass__"], [22, 2, 1, "", "__new__"], [22, 2, 1, "", "__repr__"], [22, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.ValuedFlagList.ValuedFlagList": [[22, 2, 1, "", "AsArgument"], [22, 3, 1, "", "Name"], [22, 3, 1, "", "Value"], [22, 2, 1, "", "__init__"], [22, 2, 1, "", "__init_subclass__"], [22, 2, 1, "", "__new__"], [22, 2, 1, "", "__repr__"], [22, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.ValuedFlagList.WindowsValuedFlagList": [[22, 2, 1, "", "AsArgument"], [22, 3, 1, "", "Name"], [22, 3, 1, "", "Value"], [22, 2, 1, "", "__init__"], [22, 2, 1, "", "__init_subclass__"], [22, 2, 1, "", "__new__"], [22, 2, 1, "", "__repr__"], [22, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.ValuedTupleFlag": [[23, 1, 1, "", "LongTupleFlag"], [23, 1, 1, "", "ShortTupleFlag"], [23, 1, 1, "", "WindowsTupleFlag"]], "pyTooling.CLIAbstraction.ValuedTupleFlag.LongTupleFlag": [[23, 2, 1, "", "AsArgument"], [23, 3, 1, "", "Name"], [23, 3, 1, "", "Value"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "__init_subclass__"], [23, 2, 1, "", "__new__"], [23, 2, 1, "", "__repr__"], [23, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.ValuedTupleFlag.ShortTupleFlag": [[23, 2, 1, "", "AsArgument"], [23, 3, 1, "", "Name"], [23, 3, 1, "", "Value"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "__init_subclass__"], [23, 2, 1, "", "__new__"], [23, 2, 1, "", "__repr__"], [23, 2, 1, "", "__str__"]], "pyTooling.CLIAbstraction.ValuedTupleFlag.WindowsTupleFlag": [[23, 2, 1, "", "AsArgument"], [23, 3, 1, "", "Name"], [23, 3, 1, "", "Value"], [23, 2, 1, "", "__init__"], [23, 2, 1, "", "__init_subclass__"], [23, 2, 1, "", "__new__"], [23, 2, 1, "", "__repr__"], [23, 2, 1, "", "__str__"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:data", "5": "py:exception", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "data", "Python data"], "5": ["py", "exception", "Python exception"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"argument": [0, 7, 15], "todo": [0, 7, 8], "overview": 0, "without": 0, "prefix": 0, "charact": 0, "": 0, "execut": [0, 3], "command": [0, 17], "string": 0, "list": 0, "path": 0, "With": 0, "flag": [0, 18], "valu": 0, "boolean": 0, "option": [0, 1], "tupl": 0, "depend": 1, "pytool": [1, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "cliabstract": [1, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "packag": 1, "unit": 1, "test": 1, "coverag": [1, 9], "type": [1, 24], "check": [1, 24], "sphinx": 1, "document": [1, 11], "publish": 1, "ci": 1, "server": 1, "onli": 1, "creativ": 2, "common": 2, "attribut": 2, "4": [2, 6], "0": [2, 6], "intern": 2, "us": [2, 5, 11], "public": 2, "licens": [2, 6, 11], "section": 2, "1": [2, 6], "definit": [2, 6], "2": [2, 6], "scope": 2, "3": [2, 6], "condit": 2, "sui": 2, "generi": 2, "databas": 2, "right": 2, "5": [2, 6], "disclaim": [2, 6], "warranti": [2, 6], "limit": [2, 6], "liabil": [2, 6], "6": [2, 6], "term": 2, "termin": 2, "7": [2, 6], "other": 2, "8": [2, 6], "interpret": 2, "simpl": [3, 7], "exampl": [3, 7, 11], "glossari": 4, "instal": 5, "updat": [5, 11], "pip": 5, "from": [5, 11], "pypi": 5, "uninstal": 5, "local": 5, "directori": 5, "setup": 5, "py": 5, "legaci": 5, "apach": 6, "grant": 6, "copyright": 6, "patent": 6, "redistribut": 6, "submiss": 6, "contribut": 6, "trademark": 6, "9": 6, "accept": 6, "addit": 6, "program": 7, "set": 7, "name": 7, "base": 7, "o": 7, "defin": 7, "deriv": 7, "variant": 7, "tutori": 8, "report": [9, 24], "index": [10, 12], "The": 11, "main": 11, "goal": 11, "case": 11, "consum": 11, "new": 11, "feb": 11, "2022": 11, "major": 11, "dec": 11, "2021": 11, "extract": 11, "pyipcmi": 11, "contributor": 11, "python": 12, "modul": 12, "booleanflag": 16, "keyvalueflag": 19, "optionalvaluedflag": 20, "valuedflag": 21, "valuedflaglist": 22, "valuedtupleflag": 23, "static": 24}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Arguments": [[0, "arguments"]], "Todo": [[0, "id1"], [0, "id3"], [0, "id4"], [0, "id5"], [0, "id6"], [0, "id7"], [0, "id8"], [7, "id1"], [7, "id2"], [7, "id3"], [7, "id4"], [8, "id1"]], "Overview": [[0, "overview"]], "Without Prefix Character(s)": [[0, "without-prefix-character-s"]], "Executable": [[0, "executable"], [3, "executable"]], "Command": [[0, "command"], [0, "id2"]], "String": [[0, "string"]], "List of Strings": [[0, "list-of-strings"]], "Path": [[0, "path"]], "List of Paths": [[0, "list-of-paths"]], "With Prefix Character(s)": [[0, "with-prefix-character-s"]], "Flag": [[0, "flag"]], "Flag with Value": [[0, "flag-with-value"]], "Boolean Flag": [[0, "boolean-flag"]], "Flag with Optional Value": [[0, "flag-with-optional-value"]], "List of Flags with Value": [[0, "list-of-flags-with-value"]], "Flag with Value as a Tuple": [[0, "flag-with-value-as-a-tuple"]], "Dependency": [[1, "dependency"]], "pyTooling.CLIAbstraction Package": [[1, "pytooling-cliabstraction-package"]], "Unit Testing / Coverage / Type Checking (Optional)": [[1, "unit-testing-coverage-type-checking-optional"]], "Sphinx Documentation (Optional)": [[1, "sphinx-documentation-optional"]], "Packaging (Optional)": [[1, "packaging-optional"]], "Publishing (CI-Server only)": [[1, "publishing-ci-server-only"]], "Creative Commons Attribution 4.0 International": [[2, "creative-commons-attribution-4-0-international"]], "Using Creative Commons Public Licenses": [[2, null]], "Section 1 \u2013 Definitions.": [[2, "section-1-definitions"]], "Section 2 \u2013 Scope.": [[2, "section-2-scope"]], "Section 3 \u2013 License Conditions.": [[2, "section-3-license-conditions"]], "Section 4 \u2013 Sui Generis Database Rights.": [[2, "section-4-sui-generis-database-rights"]], "Section 5 \u2013 Disclaimer of Warranties and Limitation of Liability.": [[2, "section-5-disclaimer-of-warranties-and-limitation-of-liability"]], "Section 6 \u2013 Term and Termination.": [[2, "section-6-term-and-termination"]], "Section 7 \u2013 Other Terms and Conditions.": [[2, "section-7-other-terms-and-conditions"]], "Section 8 \u2013 Interpretation.": [[2, "section-8-interpretation"]], "Simple Example": [[3, "simple-example"], [7, "simple-example"]], "Glossary": [[4, "glossary"]], "Installation/Updates": [[5, "installation-updates"]], "Using PIP": [[5, "using-pip"]], "Installation from PyPI using PIP": [[5, "installation-from-pypi-using-pip"]], "Updating from PyPI using PIP": [[5, "updating-from-pypi-using-pip"]], "Uninstallation using PIP": [[5, "uninstallation-using-pip"]], "Installation from local directory using PIP": [[5, "installation-from-local-directory-using-pip"]], "Using setup.py (legacy)": [[5, "using-setup-py-legacy"]], "Installation using setup.py": [[5, "installation-using-setup-py"]], "Apache License 2.0": [[6, "apache-license-2-0"]], "1. Definitions.": [[6, "definitions"]], "2. Grant of Copyright License.": [[6, "grant-of-copyright-license"]], "3. Grant of Patent License.": [[6, "grant-of-patent-license"]], "4. Redistribution.": [[6, "redistribution"]], "5. Submission of Contributions.": [[6, "submission-of-contributions"]], "6. Trademarks.": [[6, "trademarks"]], "7. Disclaimer of Warranty.": [[6, "disclaimer-of-warranty"]], "8. Limitation of Liability.": [[6, "limitation-of-liability"]], "9. Accepting Warranty or Additional Liability.": [[6, "accepting-warranty-or-additional-liability"]], "Program": [[7, "program"]], "Setting Program Names based on OS": [[7, "setting-program-names-based-on-os"]], "Defining Arguments on a Program": [[7, "defining-arguments-on-a-program"]], "Setting Arguments on a Program": [[7, "setting-arguments-on-a-program"]], "Derive Program Variants": [[7, "derive-program-variants"]], "Tutorial": [[8, "tutorial"]], "Coverage Report": [[9, "coverage-report"]], "Index": [[10, "index"]], "The pyTooling.CLIAbstraction Documentation": [[11, "the-pytooling-cliabstraction-documentation"]], "Main Goals": [[11, "main-goals"]], "Use Cases": [[11, "use-cases"]], "Example": [[11, "example"]], "Consumers": [[11, "consumers"]], "News": [[11, "news"]], "Feb. 2022 - Major Update": [[11, "feb-2022-major-update"]], "Dec. 2021 - Extracted CLIAbstraction from pyIPCMI": [[11, "dec-2021-extracted-cliabstraction-from-pyipcmi"]], "Contributors": [[11, "contributors"]], "License": [[11, "license"]], "Python Module Index": [[12, "python-module-index"]], "pyTooling.CLIAbstraction": [[14, "module-pyTooling.CLIAbstraction"]], "pyTooling.CLIAbstraction.Argument": [[15, "module-pyTooling.CLIAbstraction.Argument"]], "pyTooling.CLIAbstraction.BooleanFlag": [[16, "module-pyTooling.CLIAbstraction.BooleanFlag"]], "pyTooling.CLIAbstraction.Command": [[17, "module-pyTooling.CLIAbstraction.Command"]], "pyTooling.CLIAbstraction.Flag": [[18, "module-pyTooling.CLIAbstraction.Flag"]], "pyTooling.CLIAbstraction.KeyValueFlag": [[19, "module-pyTooling.CLIAbstraction.KeyValueFlag"]], "pyTooling.CLIAbstraction.OptionalValuedFlag": [[20, "module-pyTooling.CLIAbstraction.OptionalValuedFlag"]], "pyTooling.CLIAbstraction.ValuedFlag": [[21, "module-pyTooling.CLIAbstraction.ValuedFlag"]], "pyTooling.CLIAbstraction.ValuedFlagList": [[22, "module-pyTooling.CLIAbstraction.ValuedFlagList"]], "pyTooling.CLIAbstraction.ValuedTupleFlag": [[23, "module-pyTooling.CLIAbstraction.ValuedTupleFlag"]], "Static Type Checking Report": [[24, "static-type-checking-report"]]}, "indexentries": {"clioption": [[4, "term-CLIOption"]], "cliparameter": [[4, "term-CLIParameter"]], "executable": [[4, "term-Executable"]], "program": [[4, "term-Program"]], "cliabstractionexception": [[14, "pyTooling.CLIAbstraction.CLIAbstractionException"]], "cliargument (class in pytooling.cliabstraction)": [[14, "pyTooling.CLIAbstraction.CLIArgument"]], "dryrunexception": [[14, "pyTooling.CLIAbstraction.DryRunException"]], "executable (class in pytooling.cliabstraction)": [[14, "pyTooling.CLIAbstraction.Executable"]], "getattributes() (pytooling.cliabstraction.cliargument class method)": [[14, "pyTooling.CLIAbstraction.CLIArgument.GetAttributes"]], "getclasses() (pytooling.cliabstraction.cliargument class method)": [[14, "pyTooling.CLIAbstraction.CLIArgument.GetClasses"]], "program (class in pytooling.cliabstraction)": [[14, "pyTooling.CLIAbstraction.Program"]], "_appendattribute() (pytooling.cliabstraction.cliargument static method)": [[14, "pyTooling.CLIAbstraction.CLIArgument._AppendAttribute"]], "__attributesmembername__ (pytooling.cliabstraction.cliargument attribute)": [[14, "pyTooling.CLIAbstraction.CLIArgument.__AttributesMemberName__"]], "__call__() (pytooling.cliabstraction.cliargument method)": [[14, "pyTooling.CLIAbstraction.CLIArgument.__call__"]], "__cause__ (pytooling.cliabstraction.cliabstractionexception attribute)": [[14, "pyTooling.CLIAbstraction.CLIAbstractionException.__cause__"]], "__cause__ (pytooling.cliabstraction.dryrunexception attribute)": [[14, "pyTooling.CLIAbstraction.DryRunException.__cause__"]], "__clioptions__ (pytooling.cliabstraction.executable attribute)": [[14, "pyTooling.CLIAbstraction.Executable.__cliOptions__"]], "__clioptions__ (pytooling.cliabstraction.program attribute)": [[14, "pyTooling.CLIAbstraction.Program.__cliOptions__"]], "__cliparameters__ (pytooling.cliabstraction.executable attribute)": [[14, "pyTooling.CLIAbstraction.Executable.__cliParameters__"]], "__cliparameters__ (pytooling.cliabstraction.program attribute)": [[14, "pyTooling.CLIAbstraction.Program.__cliParameters__"]], "__context__ (pytooling.cliabstraction.cliabstractionexception attribute)": [[14, "pyTooling.CLIAbstraction.CLIAbstractionException.__context__"]], "__context__ (pytooling.cliabstraction.dryrunexception attribute)": [[14, "pyTooling.CLIAbstraction.DryRunException.__context__"]], "__delattr__() (pytooling.cliabstraction.cliabstractionexception method)": [[14, "pyTooling.CLIAbstraction.CLIAbstractionException.__delattr__"]], "__delattr__() (pytooling.cliabstraction.dryrunexception method)": [[14, "pyTooling.CLIAbstraction.DryRunException.__delattr__"]], "__getattribute__() (pytooling.cliabstraction.cliabstractionexception method)": [[14, "pyTooling.CLIAbstraction.CLIAbstractionException.__getattribute__"]], "__getattribute__() (pytooling.cliabstraction.dryrunexception method)": [[14, "pyTooling.CLIAbstraction.DryRunException.__getattribute__"]], "__getitem__() (pytooling.cliabstraction.executable method)": [[14, "pyTooling.CLIAbstraction.Executable.__getitem__"]], "__getitem__() (pytooling.cliabstraction.program method)": [[14, "pyTooling.CLIAbstraction.Program.__getitem__"]], "__init__() (pytooling.cliabstraction.cliabstractionexception method)": [[14, "pyTooling.CLIAbstraction.CLIAbstractionException.__init__"]], "__init__() (pytooling.cliabstraction.dryrunexception method)": [[14, "pyTooling.CLIAbstraction.DryRunException.__init__"]], "__init__() (pytooling.cliabstraction.executable method)": [[14, "pyTooling.CLIAbstraction.Executable.__init__"]], "__init__() (pytooling.cliabstraction.program method)": [[14, "pyTooling.CLIAbstraction.Program.__init__"]], "__init_subclass__() (pytooling.cliabstraction.cliargument class method)": [[14, "pyTooling.CLIAbstraction.CLIArgument.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.executable class method)": [[14, "pyTooling.CLIAbstraction.Executable.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.program class method)": [[14, "pyTooling.CLIAbstraction.Program.__init_subclass__"]], "__new__() (pytooling.cliabstraction.cliabstractionexception method)": [[14, "pyTooling.CLIAbstraction.CLIAbstractionException.__new__"]], "__new__() (pytooling.cliabstraction.dryrunexception method)": [[14, "pyTooling.CLIAbstraction.DryRunException.__new__"]], "__reduce__() (pytooling.cliabstraction.cliabstractionexception method)": [[14, "pyTooling.CLIAbstraction.CLIAbstractionException.__reduce__"]], "__reduce__() (pytooling.cliabstraction.dryrunexception method)": [[14, "pyTooling.CLIAbstraction.DryRunException.__reduce__"]], "__repr__() (pytooling.cliabstraction.cliabstractionexception method)": [[14, "pyTooling.CLIAbstraction.CLIAbstractionException.__repr__"]], "__repr__() (pytooling.cliabstraction.dryrunexception method)": [[14, "pyTooling.CLIAbstraction.DryRunException.__repr__"]], "__repr__() (pytooling.cliabstraction.executable method)": [[14, "pyTooling.CLIAbstraction.Executable.__repr__"]], "__repr__() (pytooling.cliabstraction.program method)": [[14, "pyTooling.CLIAbstraction.Program.__repr__"]], "__setattr__() (pytooling.cliabstraction.cliabstractionexception method)": [[14, "pyTooling.CLIAbstraction.CLIAbstractionException.__setattr__"]], "__setattr__() (pytooling.cliabstraction.dryrunexception method)": [[14, "pyTooling.CLIAbstraction.DryRunException.__setattr__"]], "__str__() (pytooling.cliabstraction.cliabstractionexception method)": [[14, "pyTooling.CLIAbstraction.CLIAbstractionException.__str__"]], "__str__() (pytooling.cliabstraction.dryrunexception method)": [[14, "pyTooling.CLIAbstraction.DryRunException.__str__"]], "__str__() (pytooling.cliabstraction.executable method)": [[14, "pyTooling.CLIAbstraction.Executable.__str__"]], "__str__() (pytooling.cliabstraction.program method)": [[14, "pyTooling.CLIAbstraction.Program.__str__"]], "_classes (pytooling.cliabstraction.cliargument attribute)": [[14, "pyTooling.CLIAbstraction.CLIArgument._classes"]], "_dryrun (pytooling.cliabstraction.executable attribute)": [[14, "pyTooling.CLIAbstraction.Executable._dryRun"]], "_dryrun (pytooling.cliabstraction.program attribute)": [[14, "pyTooling.CLIAbstraction.Program._dryRun"]], "_executablenames (pytooling.cliabstraction.executable attribute)": [[14, "pyTooling.CLIAbstraction.Executable._executableNames"]], "_executablenames (pytooling.cliabstraction.program attribute)": [[14, "pyTooling.CLIAbstraction.Program._executableNames"]], "_executablepath (pytooling.cliabstraction.executable attribute)": [[14, "pyTooling.CLIAbstraction.Executable._executablePath"]], "_executablepath (pytooling.cliabstraction.program attribute)": [[14, "pyTooling.CLIAbstraction.Program._executablePath"]], "_platform (pytooling.cliabstraction.executable attribute)": [[14, "pyTooling.CLIAbstraction.Executable._platform"]], "_platform (pytooling.cliabstraction.program attribute)": [[14, "pyTooling.CLIAbstraction.Program._platform"]], "module": [[14, "module-pyTooling.CLIAbstraction"], [15, "module-pyTooling.CLIAbstraction.Argument"], [16, "module-pyTooling.CLIAbstraction.BooleanFlag"], [17, "module-pyTooling.CLIAbstraction.Command"], [18, "module-pyTooling.CLIAbstraction.Flag"], [19, "module-pyTooling.CLIAbstraction.KeyValueFlag"], [20, "module-pyTooling.CLIAbstraction.OptionalValuedFlag"], [21, "module-pyTooling.CLIAbstraction.ValuedFlag"], [22, "module-pyTooling.CLIAbstraction.ValuedFlagList"], [23, "module-pyTooling.CLIAbstraction.ValuedTupleFlag"]], "pytooling.cliabstraction": [[14, "module-pyTooling.CLIAbstraction"]], "with_traceback() (pytooling.cliabstraction.cliabstractionexception method)": [[14, "pyTooling.CLIAbstraction.CLIAbstractionException.with_traceback"]], "with_traceback() (pytooling.cliabstraction.dryrunexception method)": [[14, "pyTooling.CLIAbstraction.DryRunException.with_traceback"]], "asargument() (pytooling.cliabstraction.argument.commandlineargument method)": [[15, "pyTooling.CLIAbstraction.Argument.CommandLineArgument.AsArgument"]], "asargument() (pytooling.cliabstraction.argument.delimiterargument method)": [[15, "pyTooling.CLIAbstraction.Argument.DelimiterArgument.AsArgument"]], "asargument() (pytooling.cliabstraction.argument.executableargument method)": [[15, "pyTooling.CLIAbstraction.Argument.ExecutableArgument.AsArgument"]], "asargument() (pytooling.cliabstraction.argument.namedargument method)": [[15, "pyTooling.CLIAbstraction.Argument.NamedArgument.AsArgument"]], "asargument() (pytooling.cliabstraction.argument.pathargument method)": [[15, "pyTooling.CLIAbstraction.Argument.PathArgument.AsArgument"]], "asargument() (pytooling.cliabstraction.argument.pathlistargument method)": [[15, "pyTooling.CLIAbstraction.Argument.PathListArgument.AsArgument"]], "asargument() (pytooling.cliabstraction.argument.stringargument method)": [[15, "pyTooling.CLIAbstraction.Argument.StringArgument.AsArgument"]], "asargument() (pytooling.cliabstraction.argument.stringlistargument method)": [[15, "pyTooling.CLIAbstraction.Argument.StringListArgument.AsArgument"]], "asargument() (pytooling.cliabstraction.argument.valuedargument method)": [[15, "pyTooling.CLIAbstraction.Argument.ValuedArgument.AsArgument"]], "commandlineargument (class in pytooling.cliabstraction.argument)": [[15, "pyTooling.CLIAbstraction.Argument.CommandLineArgument"]], "delimiterargument (class in pytooling.cliabstraction.argument)": [[15, "pyTooling.CLIAbstraction.Argument.DelimiterArgument"]], "executable (pytooling.cliabstraction.argument.executableargument property)": [[15, "pyTooling.CLIAbstraction.Argument.ExecutableArgument.Executable"]], "executableargument (class in pytooling.cliabstraction.argument)": [[15, "pyTooling.CLIAbstraction.Argument.ExecutableArgument"]], "name (pytooling.cliabstraction.argument.namedargument property)": [[15, "pyTooling.CLIAbstraction.Argument.NamedArgument.Name"]], "namedargument (class in pytooling.cliabstraction.argument)": [[15, "pyTooling.CLIAbstraction.Argument.NamedArgument"]], "pathargument (class in pytooling.cliabstraction.argument)": [[15, "pyTooling.CLIAbstraction.Argument.PathArgument"]], "pathlistargument (class in pytooling.cliabstraction.argument)": [[15, "pyTooling.CLIAbstraction.Argument.PathListArgument"]], "stringargument (class in pytooling.cliabstraction.argument)": [[15, "pyTooling.CLIAbstraction.Argument.StringArgument"]], "stringlistargument (class in pytooling.cliabstraction.argument)": [[15, "pyTooling.CLIAbstraction.Argument.StringListArgument"]], "value (pytooling.cliabstraction.argument.pathargument property)": [[15, "pyTooling.CLIAbstraction.Argument.PathArgument.Value"]], "value (pytooling.cliabstraction.argument.pathlistargument property)": [[15, "pyTooling.CLIAbstraction.Argument.PathListArgument.Value"]], "value (pytooling.cliabstraction.argument.stringargument property)": [[15, "pyTooling.CLIAbstraction.Argument.StringArgument.Value"]], "value (pytooling.cliabstraction.argument.stringlistargument property)": [[15, "pyTooling.CLIAbstraction.Argument.StringListArgument.Value"]], "value (pytooling.cliabstraction.argument.valuedargument property)": [[15, "pyTooling.CLIAbstraction.Argument.ValuedArgument.Value"]], "valuet (in module pytooling.cliabstraction.argument)": [[15, "pyTooling.CLIAbstraction.Argument.ValueT"]], "valuedargument (class in pytooling.cliabstraction.argument)": [[15, "pyTooling.CLIAbstraction.Argument.ValuedArgument"]], "__init__() (pytooling.cliabstraction.argument.executableargument method)": [[15, "pyTooling.CLIAbstraction.Argument.ExecutableArgument.__init__"]], "__init__() (pytooling.cliabstraction.argument.pathargument method)": [[15, "pyTooling.CLIAbstraction.Argument.PathArgument.__init__"]], "__init__() (pytooling.cliabstraction.argument.pathlistargument method)": [[15, "pyTooling.CLIAbstraction.Argument.PathListArgument.__init__"]], "__init__() (pytooling.cliabstraction.argument.stringargument method)": [[15, "pyTooling.CLIAbstraction.Argument.StringArgument.__init__"]], "__init__() (pytooling.cliabstraction.argument.stringlistargument method)": [[15, "pyTooling.CLIAbstraction.Argument.StringListArgument.__init__"]], "__init__() (pytooling.cliabstraction.argument.valuedargument method)": [[15, "pyTooling.CLIAbstraction.Argument.ValuedArgument.__init__"]], "__init_subclass__() (pytooling.cliabstraction.argument.commandlineargument class method)": [[15, "pyTooling.CLIAbstraction.Argument.CommandLineArgument.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.argument.delimiterargument class method)": [[15, "pyTooling.CLIAbstraction.Argument.DelimiterArgument.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.argument.executableargument class method)": [[15, "pyTooling.CLIAbstraction.Argument.ExecutableArgument.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.argument.namedargument class method)": [[15, "pyTooling.CLIAbstraction.Argument.NamedArgument.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.argument.pathargument class method)": [[15, "pyTooling.CLIAbstraction.Argument.PathArgument.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.argument.pathlistargument class method)": [[15, "pyTooling.CLIAbstraction.Argument.PathListArgument.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.argument.stringargument class method)": [[15, "pyTooling.CLIAbstraction.Argument.StringArgument.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.argument.stringlistargument class method)": [[15, "pyTooling.CLIAbstraction.Argument.StringListArgument.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.argument.valuedargument class method)": [[15, "pyTooling.CLIAbstraction.Argument.ValuedArgument.__init_subclass__"]], "__new__() (pytooling.cliabstraction.argument.commandlineargument static method)": [[15, "pyTooling.CLIAbstraction.Argument.CommandLineArgument.__new__"]], "__new__() (pytooling.cliabstraction.argument.delimiterargument static method)": [[15, "pyTooling.CLIAbstraction.Argument.DelimiterArgument.__new__"]], "__new__() (pytooling.cliabstraction.argument.executableargument static method)": [[15, "pyTooling.CLIAbstraction.Argument.ExecutableArgument.__new__"]], "__new__() (pytooling.cliabstraction.argument.namedargument static method)": [[15, "pyTooling.CLIAbstraction.Argument.NamedArgument.__new__"]], "__new__() (pytooling.cliabstraction.argument.pathargument static method)": [[15, "pyTooling.CLIAbstraction.Argument.PathArgument.__new__"]], "__new__() (pytooling.cliabstraction.argument.pathlistargument static method)": [[15, "pyTooling.CLIAbstraction.Argument.PathListArgument.__new__"]], "__new__() (pytooling.cliabstraction.argument.stringargument static method)": [[15, "pyTooling.CLIAbstraction.Argument.StringArgument.__new__"]], "__new__() (pytooling.cliabstraction.argument.stringlistargument static method)": [[15, "pyTooling.CLIAbstraction.Argument.StringListArgument.__new__"]], "__new__() (pytooling.cliabstraction.argument.valuedargument static method)": [[15, "pyTooling.CLIAbstraction.Argument.ValuedArgument.__new__"]], "__repr__() (pytooling.cliabstraction.argument.commandlineargument method)": [[15, "pyTooling.CLIAbstraction.Argument.CommandLineArgument.__repr__"]], "__repr__() (pytooling.cliabstraction.argument.delimiterargument method)": [[15, "pyTooling.CLIAbstraction.Argument.DelimiterArgument.__repr__"]], "__repr__() (pytooling.cliabstraction.argument.executableargument method)": [[15, "pyTooling.CLIAbstraction.Argument.ExecutableArgument.__repr__"]], "__repr__() (pytooling.cliabstraction.argument.namedargument method)": [[15, "pyTooling.CLIAbstraction.Argument.NamedArgument.__repr__"]], "__repr__() (pytooling.cliabstraction.argument.pathargument method)": [[15, "pyTooling.CLIAbstraction.Argument.PathArgument.__repr__"]], "__repr__() (pytooling.cliabstraction.argument.pathlistargument method)": [[15, "pyTooling.CLIAbstraction.Argument.PathListArgument.__repr__"]], "__repr__() (pytooling.cliabstraction.argument.stringargument method)": [[15, "pyTooling.CLIAbstraction.Argument.StringArgument.__repr__"]], "__repr__() (pytooling.cliabstraction.argument.stringlistargument method)": [[15, "pyTooling.CLIAbstraction.Argument.StringListArgument.__repr__"]], "__repr__() (pytooling.cliabstraction.argument.valuedargument method)": [[15, "pyTooling.CLIAbstraction.Argument.ValuedArgument.__repr__"]], "__str__() (pytooling.cliabstraction.argument.commandlineargument method)": [[15, "pyTooling.CLIAbstraction.Argument.CommandLineArgument.__str__"]], "__str__() (pytooling.cliabstraction.argument.delimiterargument method)": [[15, "pyTooling.CLIAbstraction.Argument.DelimiterArgument.__str__"]], "__str__() (pytooling.cliabstraction.argument.executableargument method)": [[15, "pyTooling.CLIAbstraction.Argument.ExecutableArgument.__str__"]], "__str__() (pytooling.cliabstraction.argument.namedargument method)": [[15, "pyTooling.CLIAbstraction.Argument.NamedArgument.__str__"]], "__str__() (pytooling.cliabstraction.argument.pathargument method)": [[15, "pyTooling.CLIAbstraction.Argument.PathArgument.__str__"]], "__str__() (pytooling.cliabstraction.argument.pathlistargument method)": [[15, "pyTooling.CLIAbstraction.Argument.PathListArgument.__str__"]], "__str__() (pytooling.cliabstraction.argument.stringargument method)": [[15, "pyTooling.CLIAbstraction.Argument.StringArgument.__str__"]], "__str__() (pytooling.cliabstraction.argument.stringlistargument method)": [[15, "pyTooling.CLIAbstraction.Argument.StringListArgument.__str__"]], "__str__() (pytooling.cliabstraction.argument.valuedargument method)": [[15, "pyTooling.CLIAbstraction.Argument.ValuedArgument.__str__"]], "pytooling.cliabstraction.argument": [[15, "module-pyTooling.CLIAbstraction.Argument"]], "asargument() (pytooling.cliabstraction.booleanflag.booleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.BooleanFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.booleanflag.longbooleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.LongBooleanFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.booleanflag.shortbooleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.ShortBooleanFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.booleanflag.windowsbooleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.WindowsBooleanFlag.AsArgument"]], "booleanflag (class in pytooling.cliabstraction.booleanflag)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.BooleanFlag"]], "longbooleanflag (class in pytooling.cliabstraction.booleanflag)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.LongBooleanFlag"]], "name (pytooling.cliabstraction.booleanflag.booleanflag property)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.BooleanFlag.Name"]], "name (pytooling.cliabstraction.booleanflag.longbooleanflag property)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.LongBooleanFlag.Name"]], "name (pytooling.cliabstraction.booleanflag.shortbooleanflag property)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.ShortBooleanFlag.Name"]], "name (pytooling.cliabstraction.booleanflag.windowsbooleanflag property)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.WindowsBooleanFlag.Name"]], "shortbooleanflag (class in pytooling.cliabstraction.booleanflag)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.ShortBooleanFlag"]], "value (pytooling.cliabstraction.booleanflag.booleanflag property)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.BooleanFlag.Value"]], "value (pytooling.cliabstraction.booleanflag.longbooleanflag property)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.LongBooleanFlag.Value"]], "value (pytooling.cliabstraction.booleanflag.shortbooleanflag property)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.ShortBooleanFlag.Value"]], "value (pytooling.cliabstraction.booleanflag.windowsbooleanflag property)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.WindowsBooleanFlag.Value"]], "windowsbooleanflag (class in pytooling.cliabstraction.booleanflag)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.WindowsBooleanFlag"]], "__init__() (pytooling.cliabstraction.booleanflag.booleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.BooleanFlag.__init__"]], "__init__() (pytooling.cliabstraction.booleanflag.longbooleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.LongBooleanFlag.__init__"]], "__init__() (pytooling.cliabstraction.booleanflag.shortbooleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.ShortBooleanFlag.__init__"]], "__init__() (pytooling.cliabstraction.booleanflag.windowsbooleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.WindowsBooleanFlag.__init__"]], "__init_subclass__() (pytooling.cliabstraction.booleanflag.booleanflag class method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.BooleanFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.booleanflag.longbooleanflag class method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.LongBooleanFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.booleanflag.shortbooleanflag class method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.ShortBooleanFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.booleanflag.windowsbooleanflag class method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.WindowsBooleanFlag.__init_subclass__"]], "__new__() (pytooling.cliabstraction.booleanflag.booleanflag static method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.BooleanFlag.__new__"]], "__new__() (pytooling.cliabstraction.booleanflag.longbooleanflag static method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.LongBooleanFlag.__new__"]], "__new__() (pytooling.cliabstraction.booleanflag.shortbooleanflag static method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.ShortBooleanFlag.__new__"]], "__new__() (pytooling.cliabstraction.booleanflag.windowsbooleanflag static method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.WindowsBooleanFlag.__new__"]], "__repr__() (pytooling.cliabstraction.booleanflag.booleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.BooleanFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.booleanflag.longbooleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.LongBooleanFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.booleanflag.shortbooleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.ShortBooleanFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.booleanflag.windowsbooleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.WindowsBooleanFlag.__repr__"]], "__str__() (pytooling.cliabstraction.booleanflag.booleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.BooleanFlag.__str__"]], "__str__() (pytooling.cliabstraction.booleanflag.longbooleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.LongBooleanFlag.__str__"]], "__str__() (pytooling.cliabstraction.booleanflag.shortbooleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.ShortBooleanFlag.__str__"]], "__str__() (pytooling.cliabstraction.booleanflag.windowsbooleanflag method)": [[16, "pyTooling.CLIAbstraction.BooleanFlag.WindowsBooleanFlag.__str__"]], "pytooling.cliabstraction.booleanflag": [[16, "module-pyTooling.CLIAbstraction.BooleanFlag"]], "asargument() (pytooling.cliabstraction.command.commandargument method)": [[17, "pyTooling.CLIAbstraction.Command.CommandArgument.AsArgument"]], "asargument() (pytooling.cliabstraction.command.longcommand method)": [[17, "pyTooling.CLIAbstraction.Command.LongCommand.AsArgument"]], "asargument() (pytooling.cliabstraction.command.shortcommand method)": [[17, "pyTooling.CLIAbstraction.Command.ShortCommand.AsArgument"]], "asargument() (pytooling.cliabstraction.command.windowscommand method)": [[17, "pyTooling.CLIAbstraction.Command.WindowsCommand.AsArgument"]], "commandargument (class in pytooling.cliabstraction.command)": [[17, "pyTooling.CLIAbstraction.Command.CommandArgument"]], "longcommand (class in pytooling.cliabstraction.command)": [[17, "pyTooling.CLIAbstraction.Command.LongCommand"]], "name (pytooling.cliabstraction.command.commandargument property)": [[17, "pyTooling.CLIAbstraction.Command.CommandArgument.Name"]], "name (pytooling.cliabstraction.command.longcommand property)": [[17, "pyTooling.CLIAbstraction.Command.LongCommand.Name"]], "name (pytooling.cliabstraction.command.shortcommand property)": [[17, "pyTooling.CLIAbstraction.Command.ShortCommand.Name"]], "name (pytooling.cliabstraction.command.windowscommand property)": [[17, "pyTooling.CLIAbstraction.Command.WindowsCommand.Name"]], "shortcommand (class in pytooling.cliabstraction.command)": [[17, "pyTooling.CLIAbstraction.Command.ShortCommand"]], "windowscommand (class in pytooling.cliabstraction.command)": [[17, "pyTooling.CLIAbstraction.Command.WindowsCommand"]], "__init_subclass__() (pytooling.cliabstraction.command.commandargument class method)": [[17, "pyTooling.CLIAbstraction.Command.CommandArgument.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.command.longcommand class method)": [[17, "pyTooling.CLIAbstraction.Command.LongCommand.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.command.shortcommand class method)": [[17, "pyTooling.CLIAbstraction.Command.ShortCommand.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.command.windowscommand class method)": [[17, "pyTooling.CLIAbstraction.Command.WindowsCommand.__init_subclass__"]], "__new__() (pytooling.cliabstraction.command.commandargument static method)": [[17, "pyTooling.CLIAbstraction.Command.CommandArgument.__new__"]], "__new__() (pytooling.cliabstraction.command.longcommand static method)": [[17, "pyTooling.CLIAbstraction.Command.LongCommand.__new__"]], "__new__() (pytooling.cliabstraction.command.shortcommand static method)": [[17, "pyTooling.CLIAbstraction.Command.ShortCommand.__new__"]], "__new__() (pytooling.cliabstraction.command.windowscommand static method)": [[17, "pyTooling.CLIAbstraction.Command.WindowsCommand.__new__"]], "__repr__() (pytooling.cliabstraction.command.commandargument method)": [[17, "pyTooling.CLIAbstraction.Command.CommandArgument.__repr__"]], "__repr__() (pytooling.cliabstraction.command.longcommand method)": [[17, "pyTooling.CLIAbstraction.Command.LongCommand.__repr__"]], "__repr__() (pytooling.cliabstraction.command.shortcommand method)": [[17, "pyTooling.CLIAbstraction.Command.ShortCommand.__repr__"]], "__repr__() (pytooling.cliabstraction.command.windowscommand method)": [[17, "pyTooling.CLIAbstraction.Command.WindowsCommand.__repr__"]], "__str__() (pytooling.cliabstraction.command.commandargument method)": [[17, "pyTooling.CLIAbstraction.Command.CommandArgument.__str__"]], "__str__() (pytooling.cliabstraction.command.longcommand method)": [[17, "pyTooling.CLIAbstraction.Command.LongCommand.__str__"]], "__str__() (pytooling.cliabstraction.command.shortcommand method)": [[17, "pyTooling.CLIAbstraction.Command.ShortCommand.__str__"]], "__str__() (pytooling.cliabstraction.command.windowscommand method)": [[17, "pyTooling.CLIAbstraction.Command.WindowsCommand.__str__"]], "pytooling.cliabstraction.command": [[17, "module-pyTooling.CLIAbstraction.Command"]], "asargument() (pytooling.cliabstraction.flag.flagargument method)": [[18, "pyTooling.CLIAbstraction.Flag.FlagArgument.AsArgument"]], "asargument() (pytooling.cliabstraction.flag.longflag method)": [[18, "pyTooling.CLIAbstraction.Flag.LongFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.flag.shortflag method)": [[18, "pyTooling.CLIAbstraction.Flag.ShortFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.flag.windowsflag method)": [[18, "pyTooling.CLIAbstraction.Flag.WindowsFlag.AsArgument"]], "flagargument (class in pytooling.cliabstraction.flag)": [[18, "pyTooling.CLIAbstraction.Flag.FlagArgument"]], "longflag (class in pytooling.cliabstraction.flag)": [[18, "pyTooling.CLIAbstraction.Flag.LongFlag"]], "name (pytooling.cliabstraction.flag.flagargument property)": [[18, "pyTooling.CLIAbstraction.Flag.FlagArgument.Name"]], "name (pytooling.cliabstraction.flag.longflag property)": [[18, "pyTooling.CLIAbstraction.Flag.LongFlag.Name"]], "name (pytooling.cliabstraction.flag.shortflag property)": [[18, "pyTooling.CLIAbstraction.Flag.ShortFlag.Name"]], "name (pytooling.cliabstraction.flag.windowsflag property)": [[18, "pyTooling.CLIAbstraction.Flag.WindowsFlag.Name"]], "shortflag (class in pytooling.cliabstraction.flag)": [[18, "pyTooling.CLIAbstraction.Flag.ShortFlag"]], "windowsflag (class in pytooling.cliabstraction.flag)": [[18, "pyTooling.CLIAbstraction.Flag.WindowsFlag"]], "__init_subclass__() (pytooling.cliabstraction.flag.flagargument class method)": [[18, "pyTooling.CLIAbstraction.Flag.FlagArgument.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.flag.longflag class method)": [[18, "pyTooling.CLIAbstraction.Flag.LongFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.flag.shortflag class method)": [[18, "pyTooling.CLIAbstraction.Flag.ShortFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.flag.windowsflag class method)": [[18, "pyTooling.CLIAbstraction.Flag.WindowsFlag.__init_subclass__"]], "__new__() (pytooling.cliabstraction.flag.flagargument static method)": [[18, "pyTooling.CLIAbstraction.Flag.FlagArgument.__new__"]], "__new__() (pytooling.cliabstraction.flag.longflag static method)": [[18, "pyTooling.CLIAbstraction.Flag.LongFlag.__new__"]], "__new__() (pytooling.cliabstraction.flag.shortflag static method)": [[18, "pyTooling.CLIAbstraction.Flag.ShortFlag.__new__"]], "__new__() (pytooling.cliabstraction.flag.windowsflag static method)": [[18, "pyTooling.CLIAbstraction.Flag.WindowsFlag.__new__"]], "__repr__() (pytooling.cliabstraction.flag.flagargument method)": [[18, "pyTooling.CLIAbstraction.Flag.FlagArgument.__repr__"]], "__repr__() (pytooling.cliabstraction.flag.longflag method)": [[18, "pyTooling.CLIAbstraction.Flag.LongFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.flag.shortflag method)": [[18, "pyTooling.CLIAbstraction.Flag.ShortFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.flag.windowsflag method)": [[18, "pyTooling.CLIAbstraction.Flag.WindowsFlag.__repr__"]], "__str__() (pytooling.cliabstraction.flag.flagargument method)": [[18, "pyTooling.CLIAbstraction.Flag.FlagArgument.__str__"]], "__str__() (pytooling.cliabstraction.flag.longflag method)": [[18, "pyTooling.CLIAbstraction.Flag.LongFlag.__str__"]], "__str__() (pytooling.cliabstraction.flag.shortflag method)": [[18, "pyTooling.CLIAbstraction.Flag.ShortFlag.__str__"]], "__str__() (pytooling.cliabstraction.flag.windowsflag method)": [[18, "pyTooling.CLIAbstraction.Flag.WindowsFlag.__str__"]], "pytooling.cliabstraction.flag": [[18, "module-pyTooling.CLIAbstraction.Flag"]], "asargument() (pytooling.cliabstraction.keyvalueflag.longkeyvalueflag method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.LongKeyValueFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.keyvalueflag.shortkeyvalueflag method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.ShortKeyValueFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.keyvalueflag.windowskeyvalueflag method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.WindowsKeyValueFlag.AsArgument"]], "longkeyvalueflag (class in pytooling.cliabstraction.keyvalueflag)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.LongKeyValueFlag"]], "name (pytooling.cliabstraction.keyvalueflag.longkeyvalueflag property)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.LongKeyValueFlag.Name"]], "name (pytooling.cliabstraction.keyvalueflag.shortkeyvalueflag property)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.ShortKeyValueFlag.Name"]], "name (pytooling.cliabstraction.keyvalueflag.windowskeyvalueflag property)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.WindowsKeyValueFlag.Name"]], "shortkeyvalueflag (class in pytooling.cliabstraction.keyvalueflag)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.ShortKeyValueFlag"]], "value (pytooling.cliabstraction.keyvalueflag.longkeyvalueflag property)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.LongKeyValueFlag.Value"]], "value (pytooling.cliabstraction.keyvalueflag.shortkeyvalueflag property)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.ShortKeyValueFlag.Value"]], "value (pytooling.cliabstraction.keyvalueflag.windowskeyvalueflag property)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.WindowsKeyValueFlag.Value"]], "windowskeyvalueflag (class in pytooling.cliabstraction.keyvalueflag)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.WindowsKeyValueFlag"]], "__init__() (pytooling.cliabstraction.keyvalueflag.longkeyvalueflag method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.LongKeyValueFlag.__init__"]], "__init__() (pytooling.cliabstraction.keyvalueflag.shortkeyvalueflag method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.ShortKeyValueFlag.__init__"]], "__init__() (pytooling.cliabstraction.keyvalueflag.windowskeyvalueflag method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.WindowsKeyValueFlag.__init__"]], "__init_subclass__() (pytooling.cliabstraction.keyvalueflag.longkeyvalueflag class method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.LongKeyValueFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.keyvalueflag.shortkeyvalueflag class method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.ShortKeyValueFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.keyvalueflag.windowskeyvalueflag class method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.WindowsKeyValueFlag.__init_subclass__"]], "__new__() (pytooling.cliabstraction.keyvalueflag.longkeyvalueflag static method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.LongKeyValueFlag.__new__"]], "__new__() (pytooling.cliabstraction.keyvalueflag.shortkeyvalueflag static method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.ShortKeyValueFlag.__new__"]], "__new__() (pytooling.cliabstraction.keyvalueflag.windowskeyvalueflag static method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.WindowsKeyValueFlag.__new__"]], "__repr__() (pytooling.cliabstraction.keyvalueflag.longkeyvalueflag method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.LongKeyValueFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.keyvalueflag.shortkeyvalueflag method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.ShortKeyValueFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.keyvalueflag.windowskeyvalueflag method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.WindowsKeyValueFlag.__repr__"]], "__str__() (pytooling.cliabstraction.keyvalueflag.longkeyvalueflag method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.LongKeyValueFlag.__str__"]], "__str__() (pytooling.cliabstraction.keyvalueflag.shortkeyvalueflag method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.ShortKeyValueFlag.__str__"]], "__str__() (pytooling.cliabstraction.keyvalueflag.windowskeyvalueflag method)": [[19, "pyTooling.CLIAbstraction.KeyValueFlag.WindowsKeyValueFlag.__str__"]], "pytooling.cliabstraction.keyvalueflag": [[19, "module-pyTooling.CLIAbstraction.KeyValueFlag"]], "asargument() (pytooling.cliabstraction.optionalvaluedflag.longoptionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.LongOptionalValuedFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.optionalvaluedflag.optionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.OptionalValuedFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.optionalvaluedflag.shortoptionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.ShortOptionalValuedFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.optionalvaluedflag.windowsoptionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.WindowsOptionalValuedFlag.AsArgument"]], "longoptionalvaluedflag (class in pytooling.cliabstraction.optionalvaluedflag)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.LongOptionalValuedFlag"]], "name (pytooling.cliabstraction.optionalvaluedflag.longoptionalvaluedflag property)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.LongOptionalValuedFlag.Name"]], "name (pytooling.cliabstraction.optionalvaluedflag.optionalvaluedflag property)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.OptionalValuedFlag.Name"]], "name (pytooling.cliabstraction.optionalvaluedflag.shortoptionalvaluedflag property)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.ShortOptionalValuedFlag.Name"]], "name (pytooling.cliabstraction.optionalvaluedflag.windowsoptionalvaluedflag property)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.WindowsOptionalValuedFlag.Name"]], "optionalvaluedflag (class in pytooling.cliabstraction.optionalvaluedflag)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.OptionalValuedFlag"]], "shortoptionalvaluedflag (class in pytooling.cliabstraction.optionalvaluedflag)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.ShortOptionalValuedFlag"]], "value (pytooling.cliabstraction.optionalvaluedflag.longoptionalvaluedflag property)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.LongOptionalValuedFlag.Value"]], "value (pytooling.cliabstraction.optionalvaluedflag.optionalvaluedflag property)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.OptionalValuedFlag.Value"]], "value (pytooling.cliabstraction.optionalvaluedflag.shortoptionalvaluedflag property)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.ShortOptionalValuedFlag.Value"]], "value (pytooling.cliabstraction.optionalvaluedflag.windowsoptionalvaluedflag property)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.WindowsOptionalValuedFlag.Value"]], "windowsoptionalvaluedflag (class in pytooling.cliabstraction.optionalvaluedflag)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.WindowsOptionalValuedFlag"]], "__init__() (pytooling.cliabstraction.optionalvaluedflag.longoptionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.LongOptionalValuedFlag.__init__"]], "__init__() (pytooling.cliabstraction.optionalvaluedflag.optionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.OptionalValuedFlag.__init__"]], "__init__() (pytooling.cliabstraction.optionalvaluedflag.shortoptionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.ShortOptionalValuedFlag.__init__"]], "__init__() (pytooling.cliabstraction.optionalvaluedflag.windowsoptionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.WindowsOptionalValuedFlag.__init__"]], "__init_subclass__() (pytooling.cliabstraction.optionalvaluedflag.longoptionalvaluedflag class method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.LongOptionalValuedFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.optionalvaluedflag.optionalvaluedflag class method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.OptionalValuedFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.optionalvaluedflag.shortoptionalvaluedflag class method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.ShortOptionalValuedFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.optionalvaluedflag.windowsoptionalvaluedflag class method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.WindowsOptionalValuedFlag.__init_subclass__"]], "__new__() (pytooling.cliabstraction.optionalvaluedflag.longoptionalvaluedflag static method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.LongOptionalValuedFlag.__new__"]], "__new__() (pytooling.cliabstraction.optionalvaluedflag.optionalvaluedflag static method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.OptionalValuedFlag.__new__"]], "__new__() (pytooling.cliabstraction.optionalvaluedflag.shortoptionalvaluedflag static method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.ShortOptionalValuedFlag.__new__"]], "__new__() (pytooling.cliabstraction.optionalvaluedflag.windowsoptionalvaluedflag static method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.WindowsOptionalValuedFlag.__new__"]], "__repr__() (pytooling.cliabstraction.optionalvaluedflag.longoptionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.LongOptionalValuedFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.optionalvaluedflag.optionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.OptionalValuedFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.optionalvaluedflag.shortoptionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.ShortOptionalValuedFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.optionalvaluedflag.windowsoptionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.WindowsOptionalValuedFlag.__repr__"]], "__str__() (pytooling.cliabstraction.optionalvaluedflag.longoptionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.LongOptionalValuedFlag.__str__"]], "__str__() (pytooling.cliabstraction.optionalvaluedflag.optionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.OptionalValuedFlag.__str__"]], "__str__() (pytooling.cliabstraction.optionalvaluedflag.shortoptionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.ShortOptionalValuedFlag.__str__"]], "__str__() (pytooling.cliabstraction.optionalvaluedflag.windowsoptionalvaluedflag method)": [[20, "pyTooling.CLIAbstraction.OptionalValuedFlag.WindowsOptionalValuedFlag.__str__"]], "pytooling.cliabstraction.optionalvaluedflag": [[20, "module-pyTooling.CLIAbstraction.OptionalValuedFlag"]], "asargument() (pytooling.cliabstraction.valuedflag.longvaluedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.LongValuedFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.valuedflag.shortvaluedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ShortValuedFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.valuedflag.valuedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ValuedFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.valuedflag.windowsvaluedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.WindowsValuedFlag.AsArgument"]], "longvaluedflag (class in pytooling.cliabstraction.valuedflag)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.LongValuedFlag"]], "name (pytooling.cliabstraction.valuedflag.longvaluedflag property)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.LongValuedFlag.Name"]], "name (pytooling.cliabstraction.valuedflag.shortvaluedflag property)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ShortValuedFlag.Name"]], "name (pytooling.cliabstraction.valuedflag.valuedflag property)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ValuedFlag.Name"]], "name (pytooling.cliabstraction.valuedflag.windowsvaluedflag property)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.WindowsValuedFlag.Name"]], "shortvaluedflag (class in pytooling.cliabstraction.valuedflag)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ShortValuedFlag"]], "value (pytooling.cliabstraction.valuedflag.longvaluedflag property)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.LongValuedFlag.Value"]], "value (pytooling.cliabstraction.valuedflag.shortvaluedflag property)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ShortValuedFlag.Value"]], "value (pytooling.cliabstraction.valuedflag.valuedflag property)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ValuedFlag.Value"]], "value (pytooling.cliabstraction.valuedflag.windowsvaluedflag property)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.WindowsValuedFlag.Value"]], "valuedflag (class in pytooling.cliabstraction.valuedflag)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ValuedFlag"]], "windowsvaluedflag (class in pytooling.cliabstraction.valuedflag)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.WindowsValuedFlag"]], "__init__() (pytooling.cliabstraction.valuedflag.longvaluedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.LongValuedFlag.__init__"]], "__init__() (pytooling.cliabstraction.valuedflag.shortvaluedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ShortValuedFlag.__init__"]], "__init__() (pytooling.cliabstraction.valuedflag.valuedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ValuedFlag.__init__"]], "__init__() (pytooling.cliabstraction.valuedflag.windowsvaluedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.WindowsValuedFlag.__init__"]], "__init_subclass__() (pytooling.cliabstraction.valuedflag.longvaluedflag class method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.LongValuedFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.valuedflag.shortvaluedflag class method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ShortValuedFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.valuedflag.valuedflag class method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ValuedFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.valuedflag.windowsvaluedflag class method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.WindowsValuedFlag.__init_subclass__"]], "__new__() (pytooling.cliabstraction.valuedflag.longvaluedflag static method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.LongValuedFlag.__new__"]], "__new__() (pytooling.cliabstraction.valuedflag.shortvaluedflag static method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ShortValuedFlag.__new__"]], "__new__() (pytooling.cliabstraction.valuedflag.valuedflag static method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ValuedFlag.__new__"]], "__new__() (pytooling.cliabstraction.valuedflag.windowsvaluedflag static method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.WindowsValuedFlag.__new__"]], "__repr__() (pytooling.cliabstraction.valuedflag.longvaluedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.LongValuedFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.valuedflag.shortvaluedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ShortValuedFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.valuedflag.valuedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ValuedFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.valuedflag.windowsvaluedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.WindowsValuedFlag.__repr__"]], "__str__() (pytooling.cliabstraction.valuedflag.longvaluedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.LongValuedFlag.__str__"]], "__str__() (pytooling.cliabstraction.valuedflag.shortvaluedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ShortValuedFlag.__str__"]], "__str__() (pytooling.cliabstraction.valuedflag.valuedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.ValuedFlag.__str__"]], "__str__() (pytooling.cliabstraction.valuedflag.windowsvaluedflag method)": [[21, "pyTooling.CLIAbstraction.ValuedFlag.WindowsValuedFlag.__str__"]], "pytooling.cliabstraction.valuedflag": [[21, "module-pyTooling.CLIAbstraction.ValuedFlag"]], "asargument() (pytooling.cliabstraction.valuedflaglist.longvaluedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.LongValuedFlagList.AsArgument"]], "asargument() (pytooling.cliabstraction.valuedflaglist.shortvaluedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ShortValuedFlagList.AsArgument"]], "asargument() (pytooling.cliabstraction.valuedflaglist.valuedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ValuedFlagList.AsArgument"]], "asargument() (pytooling.cliabstraction.valuedflaglist.windowsvaluedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.WindowsValuedFlagList.AsArgument"]], "longvaluedflaglist (class in pytooling.cliabstraction.valuedflaglist)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.LongValuedFlagList"]], "name (pytooling.cliabstraction.valuedflaglist.longvaluedflaglist property)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.LongValuedFlagList.Name"]], "name (pytooling.cliabstraction.valuedflaglist.shortvaluedflaglist property)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ShortValuedFlagList.Name"]], "name (pytooling.cliabstraction.valuedflaglist.valuedflaglist property)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ValuedFlagList.Name"]], "name (pytooling.cliabstraction.valuedflaglist.windowsvaluedflaglist property)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.WindowsValuedFlagList.Name"]], "shortvaluedflaglist (class in pytooling.cliabstraction.valuedflaglist)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ShortValuedFlagList"]], "value (pytooling.cliabstraction.valuedflaglist.longvaluedflaglist property)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.LongValuedFlagList.Value"]], "value (pytooling.cliabstraction.valuedflaglist.shortvaluedflaglist property)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ShortValuedFlagList.Value"]], "value (pytooling.cliabstraction.valuedflaglist.valuedflaglist property)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ValuedFlagList.Value"]], "value (pytooling.cliabstraction.valuedflaglist.windowsvaluedflaglist property)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.WindowsValuedFlagList.Value"]], "valuedflaglist (class in pytooling.cliabstraction.valuedflaglist)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ValuedFlagList"]], "windowsvaluedflaglist (class in pytooling.cliabstraction.valuedflaglist)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.WindowsValuedFlagList"]], "__init__() (pytooling.cliabstraction.valuedflaglist.longvaluedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.LongValuedFlagList.__init__"]], "__init__() (pytooling.cliabstraction.valuedflaglist.shortvaluedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ShortValuedFlagList.__init__"]], "__init__() (pytooling.cliabstraction.valuedflaglist.valuedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ValuedFlagList.__init__"]], "__init__() (pytooling.cliabstraction.valuedflaglist.windowsvaluedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.WindowsValuedFlagList.__init__"]], "__init_subclass__() (pytooling.cliabstraction.valuedflaglist.longvaluedflaglist class method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.LongValuedFlagList.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.valuedflaglist.shortvaluedflaglist class method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ShortValuedFlagList.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.valuedflaglist.valuedflaglist class method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ValuedFlagList.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.valuedflaglist.windowsvaluedflaglist class method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.WindowsValuedFlagList.__init_subclass__"]], "__new__() (pytooling.cliabstraction.valuedflaglist.longvaluedflaglist static method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.LongValuedFlagList.__new__"]], "__new__() (pytooling.cliabstraction.valuedflaglist.shortvaluedflaglist static method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ShortValuedFlagList.__new__"]], "__new__() (pytooling.cliabstraction.valuedflaglist.valuedflaglist static method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ValuedFlagList.__new__"]], "__new__() (pytooling.cliabstraction.valuedflaglist.windowsvaluedflaglist static method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.WindowsValuedFlagList.__new__"]], "__repr__() (pytooling.cliabstraction.valuedflaglist.longvaluedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.LongValuedFlagList.__repr__"]], "__repr__() (pytooling.cliabstraction.valuedflaglist.shortvaluedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ShortValuedFlagList.__repr__"]], "__repr__() (pytooling.cliabstraction.valuedflaglist.valuedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ValuedFlagList.__repr__"]], "__repr__() (pytooling.cliabstraction.valuedflaglist.windowsvaluedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.WindowsValuedFlagList.__repr__"]], "__str__() (pytooling.cliabstraction.valuedflaglist.longvaluedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.LongValuedFlagList.__str__"]], "__str__() (pytooling.cliabstraction.valuedflaglist.shortvaluedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ShortValuedFlagList.__str__"]], "__str__() (pytooling.cliabstraction.valuedflaglist.valuedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.ValuedFlagList.__str__"]], "__str__() (pytooling.cliabstraction.valuedflaglist.windowsvaluedflaglist method)": [[22, "pyTooling.CLIAbstraction.ValuedFlagList.WindowsValuedFlagList.__str__"]], "pytooling.cliabstraction.valuedflaglist": [[22, "module-pyTooling.CLIAbstraction.ValuedFlagList"]], "asargument() (pytooling.cliabstraction.valuedtupleflag.longtupleflag method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.LongTupleFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.valuedtupleflag.shorttupleflag method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.ShortTupleFlag.AsArgument"]], "asargument() (pytooling.cliabstraction.valuedtupleflag.windowstupleflag method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.WindowsTupleFlag.AsArgument"]], "longtupleflag (class in pytooling.cliabstraction.valuedtupleflag)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.LongTupleFlag"]], "name (pytooling.cliabstraction.valuedtupleflag.longtupleflag property)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.LongTupleFlag.Name"]], "name (pytooling.cliabstraction.valuedtupleflag.shorttupleflag property)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.ShortTupleFlag.Name"]], "name (pytooling.cliabstraction.valuedtupleflag.windowstupleflag property)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.WindowsTupleFlag.Name"]], "shorttupleflag (class in pytooling.cliabstraction.valuedtupleflag)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.ShortTupleFlag"]], "value (pytooling.cliabstraction.valuedtupleflag.longtupleflag property)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.LongTupleFlag.Value"]], "value (pytooling.cliabstraction.valuedtupleflag.shorttupleflag property)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.ShortTupleFlag.Value"]], "value (pytooling.cliabstraction.valuedtupleflag.windowstupleflag property)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.WindowsTupleFlag.Value"]], "windowstupleflag (class in pytooling.cliabstraction.valuedtupleflag)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.WindowsTupleFlag"]], "__init__() (pytooling.cliabstraction.valuedtupleflag.longtupleflag method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.LongTupleFlag.__init__"]], "__init__() (pytooling.cliabstraction.valuedtupleflag.shorttupleflag method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.ShortTupleFlag.__init__"]], "__init__() (pytooling.cliabstraction.valuedtupleflag.windowstupleflag method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.WindowsTupleFlag.__init__"]], "__init_subclass__() (pytooling.cliabstraction.valuedtupleflag.longtupleflag class method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.LongTupleFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.valuedtupleflag.shorttupleflag class method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.ShortTupleFlag.__init_subclass__"]], "__init_subclass__() (pytooling.cliabstraction.valuedtupleflag.windowstupleflag class method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.WindowsTupleFlag.__init_subclass__"]], "__new__() (pytooling.cliabstraction.valuedtupleflag.longtupleflag static method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.LongTupleFlag.__new__"]], "__new__() (pytooling.cliabstraction.valuedtupleflag.shorttupleflag static method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.ShortTupleFlag.__new__"]], "__new__() (pytooling.cliabstraction.valuedtupleflag.windowstupleflag static method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.WindowsTupleFlag.__new__"]], "__repr__() (pytooling.cliabstraction.valuedtupleflag.longtupleflag method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.LongTupleFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.valuedtupleflag.shorttupleflag method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.ShortTupleFlag.__repr__"]], "__repr__() (pytooling.cliabstraction.valuedtupleflag.windowstupleflag method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.WindowsTupleFlag.__repr__"]], "__str__() (pytooling.cliabstraction.valuedtupleflag.longtupleflag method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.LongTupleFlag.__str__"]], "__str__() (pytooling.cliabstraction.valuedtupleflag.shorttupleflag method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.ShortTupleFlag.__str__"]], "__str__() (pytooling.cliabstraction.valuedtupleflag.windowstupleflag method)": [[23, "pyTooling.CLIAbstraction.ValuedTupleFlag.WindowsTupleFlag.__str__"]], "pytooling.cliabstraction.valuedtupleflag": [[23, "module-pyTooling.CLIAbstraction.ValuedTupleFlag"]]}})